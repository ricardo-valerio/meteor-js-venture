)]}'
{"version":3,"file":"/packages/ian:accounts-ui-bootstrap-3.js","sources":["ian:accounts-ui-bootstrap-3/accounts_ui.js","ian:accounts-ui-bootstrap-3/i18n/en.i18n.js","ian:accounts-ui-bootstrap-3/i18n/es.i18n.js","ian:accounts-ui-bootstrap-3/i18n/ca.i18n.js","ian:accounts-ui-bootstrap-3/i18n/fr.i18n.js","ian:accounts-ui-bootstrap-3/i18n/de.i18n.js","ian:accounts-ui-bootstrap-3/i18n/it.i18n.js","ian:accounts-ui-bootstrap-3/i18n/pt.i18n.js","ian:accounts-ui-bootstrap-3/i18n.js","ian:accounts-ui-bootstrap-3/login_buttons.html","ian:accounts-ui-bootstrap-3/login_buttons_single.html","ian:accounts-ui-bootstrap-3/login_buttons_dropdown.html","ian:accounts-ui-bootstrap-3/login_buttons_dialogs.html","ian:accounts-ui-bootstrap-3/login_buttons_session.js","ian:accounts-ui-bootstrap-3/login_buttons.js","ian:accounts-ui-bootstrap-3/login_buttons_single.js","ian:accounts-ui-bootstrap-3/login_buttons_dropdown.js","ian:accounts-ui-bootstrap-3/login_buttons_dialogs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iB;AACA,kB;;AAEA,4B;AACA,yB;AACA,yB;AACA,uB;AACA,G;AACA,C;;AAEA,+C;AACA,4B;AACA,+C;AACA,yB;AACA,E;AACA,C;;AAEA,wC;AACA,yB;AACA,6G;AACA,wC;AACA,mC;AACA,8D;AACA,I;AACA,C;AACA,4D;AACA,oC;AACA,oC;AACA,kB;AACA,gC;AACA,wB;AACA,iC;AACA,mB;AACA,e;AACA,qC;AACA,iD;AACA,2F;AACA,O;AACA,6E;AACA,U;AACA,qH;AACA,G;AACA,E;;AAEA,kC;AACA,kC;AACA,+D;AACA,0D;AACA,wG;AACA,0C;AACA,2F;AACA,W;AACA,6D;AACA,I;AACA,K;AACA,qG;AACA,gF;AACA,U;AACA,mC;AACA,8D;AACA,+C;AACA,4H;AACA,8C;AACA,2B;AACA,2D;AACA,O;AACA,I;AACA,G;AACA,E;AACA,E;;AAEA,gD;AACA,kE;AACA,E;;;;;;;;;;;;;;;;;;;ACzEA,gB;AACA,uB;AACA,+B;AACA,8B;AACA,mB;AACA,wB;AACA,G;AACA,uB;AACA,6B;AACA,8B;AACA,kB;AACA,wB;AACA,G;AACA,2B;AACA,qC;AACA,oB;AACA,G;AACA,8B;AACA,qB;AACA,G;AACA,uC;AACA,8B;AACA,qB;AACA,G;AACA,iC;AACA,oB;AACA,U;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,mB;AACA,oB;AACA,6B;AACA,6B;AACA,G;AACA,sB;AACA,iB;AACA,0B;AACA,oB;AACA,G;AACA,+B;AACA,gB;AACA,G;AACA,8B;AACA,4B;AACA,kB;AACA,G;AACA,0C;AACA,6B;AACA,yB;AACA,G;AACA,0C;AACA,qB;AACA,G;AACA,yB;AACA,iD;AACA,G;AACA,e;AACA,uC;AACA,uB;AACA,iB;AACA,sB;AACA,G;AACA,gB;AACA,uB;AACA,iB;AACA,+B;AACA,uB;AACA,mC;AACA,G;AACA,wB;AACA,sC;AACA,8B;AACA,0C;AACA,G;AACA,iB;AACA,kE;AACA,gC;AACA,kE;AACA,6C;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;ACnFA,gB;AACA,uB;AACA,oC;AACA,kC;AACA,qB;AACA,mB;AACA,G;AACA,uB;AACA,kC;AACA,kC;AACA,mB;AACA,8B;AACA,G;AACA,2B;AACA,4C;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,iC;AACA,0B;AACA,G;AACA,iC;AACA,2B;AACA,mB;AACA,G;AACA,iD;AACA,S;AACA,G;AACA,wC;AACA,kB;AACA,2B;AACA,uC;AACA,0B;AACA,G;AACA,sB;AACA,8B;AACA,kC;AACA,uB;AACA,G;AACA,+B;AACA,kB;AACA,G;AACA,8B;AACA,+B;AACA,oB;AACA,G;AACA,0C;AACA,kC;AACA,0B;AACA,G;AACA,0C;AACA,0B;AACA,G;AACA,yB;AACA,uD;AACA,G;AACA,e;AACA,0C;AACA,sB;AACA,8B;AACA,wB;AACA,G;AACA,gB;AACA,sB;AACA,8B;AACA,uC;AACA,yB;AACA,wC;AACA,G;AACA,wB;AACA,uC;AACA,kC;AACA,iD;AACA,G;AACA,iB;AACA,oF;AACA,8C;AACA,6E;AACA,sD;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;ACnFA,gB;AACA,uB;AACA,oC;AACA,kC;AACA,uB;AACA,mB;AACA,G;AACA,uB;AACA,kC;AACA,kC;AACA,mB;AACA,+B;AACA,G;AACA,2B;AACA,4C;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,kC;AACA,0B;AACA,G;AACA,iC;AACA,2B;AACA,oB;AACA,G;AACA,iD;AACA,Y;AACA,G;AACA,wC;AACA,kB;AACA,2B;AACA,uC;AACA,2B;AACA,G;AACA,sB;AACA,8B;AACA,iC;AACA,sB;AACA,G;AACA,+B;AACA,oB;AACA,G;AACA,8B;AACA,gC;AACA,sB;AACA,G;AACA,0C;AACA,kC;AACA,0B;AACA,G;AACA,0C;AACA,0B;AACA,G;AACA,yB;AACA,mD;AACA,G;AACA,e;AACA,0C;AACA,qB;AACA,8B;AACA,yB;AACA,G;AACA,gB;AACA,qB;AACA,8B;AACA,uC;AACA,0B;AACA,6C;AACA,G;AACA,wB;AACA,wC;AACA,kC;AACA,qD;AACA,G;AACA,iB;AACA,0E;AACA,8C;AACA,0E;AACA,sD;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;ACnFA,gB;AACA,uB;AACA,0C;AACA,sC;AACA,oB;AACA,mC;AACA,G;AACA,uB;AACA,mC;AACA,sC;AACA,mB;AACA,mC;AACA,G;AACA,2B;AACA,6C;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,sC;AACA,wB;AACA,G;AACA,iC;AACA,sB;AACA,mB;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,kB;AACA,sB;AACA,kC;AACA,0B;AACA,G;AACA,sB;AACA,iB;AACA,yC;AACA,sB;AACA,G;AACA,+B;AACA,iB;AACA,G;AACA,8B;AACA,oC;AACA,mB;AACA,G;AACA,0C;AACA,kC;AACA,0B;AACA,G;AACA,0C;AACA,wB;AACA,G;AACA,yB;AACA,qE;AACA,G;AACA,e;AACA,+C;AACA,+B;AACA,gB;AACA,yB;AACA,G;AACA,gB;AACA,gC;AACA,iB;AACA,gC;AACA,2B;AACA,8C;AACA,G;AACA,wB;AACA,yC;AACA,sC;AACA,yD;AACA,G;AACA,iB;AACA,kE;AACA,gC;AACA,kE;AACA,6C;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;ACnFA,gB;AACA,uB;AACA,kC;AACA,gC;AACA,sB;AACA,2B;AACA,G;AACA,uB;AACA,2B;AACA,gC;AACA,sB;AACA,2B;AACA,G;AACA,2B;AACA,yC;AACA,sB;AACA,G;AACA,8B;AACA,sB;AACA,G;AACA,uC;AACA,8B;AACA,sB;AACA,G;AACA,iC;AACA,qB;AACA,Y;AACA,G;AACA,iD;AACA,Y;AACA,G;AACA,wC;AACA,sB;AACA,qB;AACA,gC;AACA,gC;AACA,G;AACA,sB;AACA,iB;AACA,iC;AACA,wB;AACA,G;AACA,+B;AACA,mB;AACA,G;AACA,8B;AACA,4B;AACA,qB;AACA,G;AACA,0C;AACA,6B;AACA,6B;AACA,G;AACA,0C;AACA,qB;AACA,G;AACA,yB;AACA,wD;AACA,G;AACA,e;AACA,6C;AACA,2B;AACA,iB;AACA,sB;AACA,G;AACA,gB;AACA,2B;AACA,iB;AACA,iC;AACA,uB;AACA,yC;AACA,G;AACA,wB;AACA,wC;AACA,gC;AACA,kD;AACA,G;AACA,iB;AACA,8E;AACA,0C;AACA,mE;AACA,4D;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;ACnFA,gB;AACA,uB;AACA,iC;AACA,gC;AACA,oB;AACA,4B;AACA,G;AACA,uB;AACA,+B;AACA,gC;AACA,mB;AACA,4B;AACA,G;AACA,2B;AACA,yC;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,8B;AACA,iB;AACA,G;AACA,iC;AACA,mB;AACA,kB;AACA,G;AACA,iD;AACA,S;AACA,G;AACA,wC;AACA,iB;AACA,mB;AACA,kC;AACA,8B;AACA,G;AACA,sB;AACA,iB;AACA,iC;AACA,uB;AACA,G;AACA,+B;AACA,kB;AACA,G;AACA,8B;AACA,4B;AACA,mB;AACA,G;AACA,0C;AACA,2B;AACA,yB;AACA,G;AACA,0C;AACA,iB;AACA,G;AACA,yB;AACA,2D;AACA,G;AACA,e;AACA,sC;AACA,uB;AACA,iB;AACA,sB;AACA,G;AACA,gB;AACA,uB;AACA,iB;AACA,gC;AACA,uB;AACA,sC;AACA,G;AACA,wB;AACA,uC;AACA,gC;AACA,+C;AACA,G;AACA,iB;AACA,oE;AACA,mC;AACA,oE;AACA,qD;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;ACnFA,gB;AACA,uB;AACA,+B;AACA,4B;AACA,qB;AACA,yB;AACA,G;AACA,uB;AACA,+B;AACA,4B;AACA,mB;AACA,yB;AACA,G;AACA,2B;AACA,iC;AACA,oB;AACA,G;AACA,8B;AACA,qB;AACA,G;AACA,uC;AACA,0B;AACA,iB;AACA,G;AACA,iC;AACA,mB;AACA,iB;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,kB;AACA,kB;AACA,gC;AACA,wB;AACA,G;AACA,sB;AACA,kB;AACA,yB;AACA,wB;AACA,G;AACA,+B;AACA,kB;AACA,G;AACA,8B;AACA,wB;AACA,oB;AACA,G;AACA,0C;AACA,0B;AACA,0B;AACA,G;AACA,0C;AACA,iB;AACA,G;AACA,yB;AACA,wD;AACA,G;AACA,e;AACA,uC;AACA,sB;AACA,kB;AACA,mB;AACA,G;AACA,gB;AACA,sB;AACA,kB;AACA,gC;AACA,oB;AACA,sC;AACA,G;AACA,wB;AACA,iC;AACA,4B;AACA,8C;AACA,G;AACA,iB;AACA,+D;AACA,kC;AACA,6D;AACA,+C;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;;ACnFA,6B;;AAEA,wB;AACA,+B;AACA,+B;AACA,G;AACA,2B;AACA,2B;AACA,G;AACA,4B;AACA,4B;AACA,E;AACA,C;;;;;;;;;;;;;;;;;;;ACXA,sC;AACA,gF;AACA,kB;AACA,8B;AACA,sD;AACA,iB;AACA,0C;AACA,sD;AACA,mB;AACA,kD;AACA,uD;AACA,qB;AACA,uG;AACA,qB;AACA,qC;AACA,uD;AACA,8H;AACA,mB;AACA,mB;AACA,kG;AACA,gB;AACA,iB;AACA,+F;AACA,K;AACA,I;;AAEA,8C;AACA,gG;AACA,kB;AACA,8B;AACA,mD;AACA,iB;AACA,sG;AACA,iB;AACA,+G;AACA,K;AACA,I;;AAEA,+C;AACA,kG;AACA,kB;AACA,8B;AACA,mD;AACA,iB;AACA,2C;AACA,gE;AACA,mB;AACA,6C;AACA,uD;AACA,qB;AACA,gH;AACA,qB;AACA,sD;AACA,8D;AACA,uB;AACA,qD;AACA,4D;AACA,yB;AACA,kI;AACA,yB;AACA,kI;AACA,yB;AACA,sB;AACA,mB;AACA,gB;AACA,iB;AACA,+B;AACA,4B;AACA,8B;AACA,8F;AACA,iB;AACA,K;AACA,I;;AAEA,8C;AACA,gG;AACA,kB;AACA,gC;AACA,uD;AACA,iB;AACA,+B;AACA,mC;AACA,8B;AACA,6D;AACA,iB;AACA,kC;AACA,sD;AACA,iB;AACA,+B;AACA,8C;AACA,8B;AACA,4D;AACA,iB;AACA,O;AACA,I;;AAEA,+C;AACA,kG;AACA,kB;AACA,mN;AACA,I;;AAEA,sD;AACA,gH;AACA,kB;AACA,kC;AACA,mD;AACA,iB;AACA,mC;AACA,sC;AACA,0B;AACA,kD;AACA,mC;AACA,gC;AACA,qB;AACA,qB;AACA,c;AACA,0B;AACA,iB;AACA,mC;AACA,sC;AACA,gB;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;;AC3HA,gE;AACA,oI;AACA,kB;AACA,mB;AACA,0B;AACA,kC;AACA,qD;AACA,iB;AACA,mC;AACA,2B;AACA,yG;AACA,O;AACA,8B;AACA,0G;AACA,oC;AACA,gE;AACA,kB;AACA,iB;AACA,mC;AACA,uE;AACA,8B;AACA,yG;AACA,oC;AACA,gE;AACA,kB;AACA,a;AACA,I;;AAEA,gE;AACA,oI;AACA,kB;AACA,mB;AACA,oC;AACA,sF;AACA,I;;AAEA,gE;AACA,oI;AACA,kB;AACA,iC;AACA,c;AACA,8B;AACA,4B;AACA,0D;AACA,kC;AACA,qG;AACA,c;AACA,I;;;;;;;;;;;;;;;;;;;;AC/CA,sD;AACA,gH;AACA,kB;AACA,kB;AACA,8B;AACA,uB;AACA,qB;AACA,+B;AACA,6B;AACA,qC;AACA,0D;AACA,0C;AACA,+D;AACA,iB;AACA,iC;AACA,uB;AACA,oD;AACA,Q;AACA,oB;AACA,8B;AACA,c;AACA,kB;AACA,6E;AACA,qC;AACA,mC;AACA,4D;AACA,iB;AACA,kG;AACA,iB;AACA,4C;AACA,iE;AACA,mB;AACA,4G;AACA,mB;AACA,qH;AACA,kB;AACA,sB;AACA,I;;AAEA,6D;AACA,8H;AACA,kB;AACA,gC;AACA,4E;AACA,iB;AACA,uH;AACA,oC;AACA,gE;AACA,iB;AACA,kC;AACA,2C;AACA,8C;AACA,8B;AACA,qG;AACA,iB;AACA,4B;AACA,yC;AACA,8B;AACA,4B;AACA,kG;AACA,Q;AACA,I;;AAEA,uD;AACA,kH;AACA,kB;AACA,kB;AACA,8B;AACA,uB;AACA,qB;AACA,+B;AACA,6B;AACA,4B;AACA,2F;AACA,+B;AACA,sE;AACA,iB;AACA,2C;AACA,yF;AACA,S;AACA,iE;AACA,4B;AACA,2G;AACA,I;;AAEA,0D;AACA,wH;AACA,kB;AACA,gC;AACA,mD;AACA,iB;AACA,6C;AACA,+D;AACA,mB;AACA,gG;AACA,qC;AACA,8D;AACA,mB;AACA,6C;AACA,+D;AACA,qB;AACA,gI;AACA,6G;AACA,mB;AACA,oH;AACA,gB;AACA,K;AACA,I;;AAEA,uE;AACA,kJ;AACA,kB;AACA,mB;AACA,iB;AACA,6H;AACA,sB;AACA,4B;AACA,uG;AACA,mH;AACA,I;;AAEA,8D;AACA,gI;AACA,kB;AACA,8B;AACA,+D;AACA,iB;AACA,4F;AACA,iB;AACA,qH;AACA,mD;AACA,mB;AACA,mG;AACA,6B;AACA,2C;AACA,mC;AACA,oB;AACA,qC;AACA,yD;AACA,mB;AACA,gD;AACA,sG;AACA,oB;AACA,mB;AACA,gD;AACA,sG;AACA,oB;AACA,8C;AACA,wD;AACA,mB;AACA,kC;AACA,iC;AACA,uC;AACA,qE;AACA,qB;AACA,mC;AACA,qC;AACA,8B;AACA,kC;AACA,wG;AACA,uB;AACA,wC;AACA,oE;AACA,qB;AACA,mC;AACA,4B;AACA,+B;AACA,kC;AACA,2G;AACA,uB;AACA,6B;AACA,qC;AACA,yD;AACA,mB;AACA,yG;AACA,gB;AACA,K;AACA,I;;AAEA,4C;AACA,4F;AACA,kB;AACA,mB;AACA,yB;AACA,gG;AACA,+C;AACA,2B;AACA,gC;AACA,kB;AACA,6B;AACA,iF;AACA,M;AACA,2B;AACA,oC;AACA,kE;AACA,uC;AACA,4B;AACA,+E;AACA,8F;AACA,I;;AAEA,qD;AACA,8G;AACA,kB;AACA,sB;AACA,6B;AACA,wC;AACA,4B;AACA,uF;AACA,M;AACA,I;;AAEA,+C;AACA,kG;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,iC;AACA,sB;AACA,0E;AACA,Q;AACA,wB;AACA,4D;AACA,Q;AACA,+B;AACA,6D;AACA,Q;AACA,6B;AACA,gB;AACA,K;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,0G;AACA,iD;AACA,iB;AACA,+F;AACA,0B;AACA,+B;AACA,0C;AACA,4B;AACA,wF;AACA,2B;AACA,+B;AACA,8C;AACA,4B;AACA,wF;AACA,Q;AACA,I;;;;;;;;;;;;;;;;;;;;AC3PA,sC;AACA,kB;AACA,6d;AACA,I;AACA,+C;;AAEA,6C;AACA,8F;AACA,kB;AACA,8B;AACA,8D;AACA,iB;AACA,+B;AACA,uB;AACA,8C;AACA,0B;AACA,6B;AACA,2B;AACA,8B;AACA,4B;AACA,6B;AACA,gC;AACA,qB;AACA,uB;AACA,8B;AACA,2B;AACA,qB;AACA,sB;AACA,c;AACA,8B;AACA,4B;AACA,8B;AACA,kF;AACA,0C;AACA,2B;AACA,+B;AACA,wC;AACA,8B;AACA,uB;AACA,+B;AACA,0F;AACA,O;AACA,sH;AACA,6B;AACA,2B;AACA,iC;AACA,+C;AACA,8B;AACA,mF;AACA,kC;AACA,iC;AACA,+C;AACA,2C;AACA,mF;AACA,sK;AACA,K;AACA,I;;AAEA,6C;AACA,8F;AACA,kB;AACA,8B;AACA,8D;AACA,iB;AACA,+B;AACA,uB;AACA,8C;AACA,0B;AACA,6B;AACA,2B;AACA,8B;AACA,4B;AACA,6B;AACA,gC;AACA,qB;AACA,uB;AACA,8B;AACA,2B;AACA,qB;AACA,sB;AACA,c;AACA,8B;AACA,4B;AACA,8B;AACA,kF;AACA,0C;AACA,2B;AACA,+B;AACA,oC;AACA,8B;AACA,uB;AACA,+B;AACA,0F;AACA,O;AACA,sH;AACA,6B;AACA,2B;AACA,iC;AACA,sD;AACA,8B;AACA,mF;AACA,kC;AACA,iC;AACA,+C;AACA,2C;AACA,mF;AACA,sK;AACA,K;AACA,I;;AAEA,iD;AACA,sG;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,+B;AACA,uB;AACA,sD;AACA,0B;AACA,6B;AACA,2B;AACA,8B;AACA,4B;AACA,2B;AACA,yD;AACA,yF;AACA,2C;AACA,6B;AACA,gC;AACA,2C;AACA,yC;AACA,6B;AACA,8B;AACA,wF;AACA,2D;AACA,K;AACA,I;;AAEA,qD;AACA,8G;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,8B;AACA,uB;AACA,gD;AACA,0B;AACA,6B;AACA,4B;AACA,8B;AACA,8B;AACA,6B;AACA,+B;AACA,4B;AACA,kE;AACA,2B;AACA,gC;AACA,2C;AACA,yD;AACA,6R;AACA,gB;AACA,qC;AACA,uC;AACA,gB;AACA,qC;AACA,sE;AACA,gE;AACA,mB;AACA,0G;AACA,2B;AACA,oG;AACA,S;AACA,gC;AACA,wD;AACA,iG;AACA,wB;AACA,oG;AACA,U;AACA,oB;AACA,wE;AACA,iG;AACA,yC;AACA,gC;AACA,mF;AACA,+E;AACA,2B;AACA,8F;AACA,6D;AACA,uB;AACA,yC;AACA,a;AACA,Q;AACA,6D;AACA,0G;AACA,K;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,+B;AACA,0D;AACA,wC;AACA,oG;AACA,8B;AACA,0C;AACA,8B;AACA,2F;AACA,0B;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACxNA,c;AACA,mB;AACA,oB;;AAEA,2E;AACA,iB;AACA,yB;AACA,yB;AACA,sB;;AAEA,iB;AACA,gB;;AAEA,2C;AACA,uB;AACA,uB;AACA,sB;;AAEA,uC;AACA,2C;AACA,2C;AACA,G;;AAEA,mC;AACA,mC;AACA,iE;AACA,G;;AAEA,yC;;AAEA,mF;AACA,kC;AACA,6B;AACA,oB;AACA,wD;AACA,qH;;AAEA,yB;AACA,I;;AAEA,8B;AACA,wC;AACA,I;;AAEA,sB;AACA,oB;AACA,wC;AACA,I;;AAEA,8B;AACA,mC;AACA,2C;AACA,2C;AACA,wC;AACA,sC;AACA,wB;AACA,I;;AAEA,kC;AACA,mC;AACA,qC;AACA,+B;AACA,I;;AAEA,mC;AACA,sC;AACA,kC;AACA,+B;AACA,I;;AAEA,mE;AACA,uC;AACA,2C;AACA,qC;AACA,kC;AACA,I;;AAEA,mE;AACA,6D;AACA,iC;AACA,I;AACA,oE;AACA,yD;AACA,oE;AACA,e;AACA,qC;AACA,sC;AACA,sC;AACA,I;;AAEA,8B;AACA,mC;AACA,kC;AACA,I;;AAEA,qC;AACA,wD;AACA,4D;AACA,6D;AACA,yB;AACA,uD;AACA,U;AACA,G;AACA,G;AACA,M;;;;;;;;;;;;;;;;;;;ACxGA,a;AACA,6B;AACA,8B;;AAEA,mB;AACA,yD;;AAEA,+C;AACA,gC;AACA,I;;AAEA,2C;AACA,gC;AACA,6C;AACA,6B;AACA,wC;AACA,M;AACA,G;AACA,I;;AAEA,G;AACA,iC;AACA,G;AACA,0C;AACA,wB;AACA,4C;AACA,I;AACA,wB;AACA,oD;AACA,I;AACA,6B;AACA,4D;AACA,6B;AACA,oB;AACA,mF;AACA,sB;AACA,I;AACA,mC;AACA,6C;AACA,G;AACA,I;;;;AAIA,G;AACA,iC;AACA,G;;AAEA,iE;AACA,W;AACA,yC;AACA,wB;AACA,4C;AACA,I;AACA,2B;AACA,+C;AACA,G;AACA,G;;;;AAIA,G;AACA,gC;AACA,G;;AAEA,yC;AACA,4B;AACA,kD;AACA,I;AACA,2B;AACA,iD;AACA,G;AACA,I;;;;AAIA,G;AACA,yC;AACA,G;;;AAGA,iD;AACA,wB;AACA,4C;AACA,G;AACA,I;;AAEA,G;AACA,W;AACA,G;;AAEA,kD;AACA,2B;AACA,Y;AACA,a;;AAEA,wC;AACA,4B;AACA,oB;AACA,wB;AACA,8D;AACA,iC;;AAEA,Y;AACA,G;;AAEA,uD;AACA,mC;AACA,gF;;AAEA,+D;AACA,wD;AACA,mB;AACA,kB;;AAEA,oD;AACA,gC;AACA,6B;;AAEA,yC;AACA,W;AACA,c;AACA,K;AACA,K;AACA,G;;AAEA,yD;AACA,wC;AACA,G;;AAEA,+C;AACA,2F;AACA,G;;AAEA,mE;AACA,G;AACA,gE;AACA,uB;AACA,+D;AACA,6B;AACA,e;AACA,U;AACA,4E;AACA,gB;AACA,G;AACA,G;AACA,yD;AACA,4F;AACA,e;;AAEA,uK;;AAEA,uB;AACA,e;AACA,U;AACA,wE;AACA,gB;AACA,G;AACA,G;AACA,+D;AACA,6B;AACA,e;AACA,U;AACA,4E;AACA,gB;AACA,G;AACA,G;;AAEA,+C;AACA,W;AACA,G;;AAEA,K;;;;;;;;;;;;;;;;;;AC5KA,a;AACA,mB;AACA,yD;;AAEA,0D;AACA,qC;AACA,+B;AACA,uC;AACA,iC;AACA,e;AACA,yC;AACA,6D;AACA,kB;AACA,qD;AACA,uD;AACA,Y;AACA,qE;AACA,K;AACA,K;;AAEA,wE;;AAEA,0D;AACA,4D;AACA,sF;;AAEA,uC;AACA,G;AACA,I;;AAEA,2D;AACA,0B;AACA,wD;AACA,sB;AACA,M;AACA,I;AACA,+B;AACA,8B;AACA,wE;AACA,oB;AACA,O;AACA,iC;AACA,G;AACA,I;;;AAGA,+E;AACA,iC;AACA,uC;AACA,oD;AACA,G;AACA,K;;;;;;;;;;;;;;;;;;ACnDA,a;;AAEA,mB;AACA,yD;;AAEA,2D;AACA,gC;AACA,gC;AACA,kC;AACA,2B;AACA,I;AACA,wE;AACA,2B;AACA,oD;AACA,kB;AACA,I;AACA,oC;AACA,uC;AACA,G;AACA,I;;AAEA,qD;AACA,mB;AACA,G;;AAEA,G;AACA,qD;AACA,G;;AAEA,gD;AACA,gE;AACA,2B;AACA,uC;AACA,yD;AACA,kB;AACA,G;AACA,I;;AAEA,iD;AACA,2B;AACA,+C;AACA,I;;AAEA,oC;AACA,0D;AACA,I;;AAEA,iC;AACA,uD;AACA,I;;AAEA,+B;AACA,qD;AACA,G;AACA,I;;;AAGA,wD;AACA,qC;AACA,4E;AACA,6E;AACA,mF;AACA,K;AACA,4E;AACA,4B;AACA,qF;AACA,I;AACA,iD;AACA,gF;AACA,G;AACA,I;;;AAGA,G;AACA,sD;AACA,G;;AAEA,iD;AACA,oD;AACA,2B;AACA,mB;AACA,I;;AAEA,sD;AACA,2B;AACA,4B;AACA,qB;AACA,I;;AAEA,2D;AACA,2B;AACA,oB;AACA,I;;AAEA,yC;AACA,2B;AACA,uC;;AAEA,gE;AACA,4D;AACA,sD;AACA,4E;AACA,yE;AACA,qD;;AAEA,iD;AACA,0D;;AAEA,6E;AACA,kB;;AAEA,iD;AACA,yB;AACA,+D;AACA,2B;AACA,yD;AACA,qC;AACA,4C;AACA,uE;AACA,Q;AACA,oE;AACA,I;AACA,kD;AACA,2B;AACA,uC;;AAEA,gE;AACA,sD;AACA,4E;;AAEA,kD;AACA,yD;;AAEA,6E;AACA,kB;AACA,sB;;AAEA,iD;AACA,sB;AACA,mE;AACA,qC;AACA,4C;AACA,8E;AACA,I;AACA,gD;AACA,2B;AACA,uC;;AAEA,4D;AACA,yI;;AAEA,kD;AACA,0D;;AAEA,6E;AACA,kB;;AAEA,iD;AACA,+D;AACA,8C;AACA,yD;AACA,yE;AACA,0D;AACA,iF;AACA,I;AACA,mK;AACA,4B;AACA,oB;AACA,G;AACA,I;;;AAGA,kD;AACA,mE;AACA,iC;AACA,4B;AACA,iB;AACA,W;AACA,kD;AACA,wC;AACA,iE;AACA,yC;AACA,Y;AACA,iC;AACA,K;AACA,I;AACA,I;;AAEA,+B;AACA,qD;AACA,I;;AAEA,kC;AACA,sD;AACA,I;;AAEA,2C;AACA,wD;AACA,G;AACA,I;;AAEA,qD;AACA,wB;AACA,oD;AACA,I;;AAEA,iC;AACA,mC;AACA,I;;AAEA,gC;AACA,+D;AACA,I;;AAEA,kC;AACA,sD;AACA,G;AACA,I;;;AAGA,yD;AACA,sB;AACA,uB;AACA,mC;AACA,oD;AACA,yB;AACA,uB;AACA,0F;AACA,2C;AACA,K;AACA,O;AACA,0B;AACA,6C;AACA,yB;AACA,oE;AACA,K;AACA,O;AACA,uB;AACA,0C;AACA,uB;AACA,yB;AACA,iE;AACA,K;AACA,O;AACA,0B;AACA,6C;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,M;;AAEA,wB;AACA,0B;AACA,8C;AACA,yB;AACA,uB;AACA,2G;AACA,2C;AACA,K;AACA,O;AACA,uB;AACA,2C;AACA,uB;AACA,yB;AACA,uB;AACA,yE;AACA,2C;AACA,K;AACA,O;AACA,uB;AACA,8C;AACA,uB;AACA,yB;AACA,kF;AACA,K;AACA,O;AACA,0B;AACA,8C;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,O;AACA,gC;AACA,mD;AACA,0B;AACA,yB;AACA,4D;AACA,iE;AACA,mC;AACA,uB;AACA,qF;AACA,2C;AACA,K;AACA,M;;AAEA,8E;;AAEA,+E;AACA,I;;AAEA,oC;AACA,0D;AACA,I;;AAEA,2B;AACA,uG;AACA,I;;AAEA,4B;AACA,kD;AACA,I;;AAEA,sC;AACA,qB;AACA,sG;AACA,yC;AACA,I;;AAEA,qC;AACA,yD;AACA,G;AACA,I;;AAEA,0C;AACA,yB;AACA,mC;AACA,G;AACA,I;;AAEA,G;AACA,uC;AACA,G;AACA,8C;AACA,6G;AACA,4B;AACA,qB;AACA,I;AACA,8D;AACA,2B;AACA,oB;AACA,I;AACA,kE;AACA,2B;AACA,uC;AACA,oE;AACA,kB;AACA,G;AACA,I;;AAEA,+C;AACA,sB;AACA,Y;AACA,8B;AACA,6D;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,O;AACA,0B;AACA,yD;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,O;AACA,gC;AACA,8D;AACA,0B;AACA,yB;AACA,4D;AACA,iE;AACA,mC;AACA,uB;AACA,uD;AACA,2C;AACA,K;AACA,M;AACA,G;AACA,I;;AAEA,G;AACA,W;AACA,G;;AAEA,sC;AACA,4C;AACA,e;AACA,e;AACA,M;AACA,wB;AACA,G;;AAEA,6C;AACA,4C;AACA,e;AACA,e;AACA,M;AACA,2D;AACA,G;;AAEA,iC;AACA,8C;AACA,Y;AACA,M;AACA,W;AACA,G;;AAEA,yB;AACA,sC;;AAEA,2D;AACA,qD;AACA,2E;AACA,wE;AACA,oD;;AAEA,oB;AACA,0B;AACA,0D;AACA,W;AACA,O;AACA,qB;AACA,uB;AACA,M;AACA,8B;AACA,oD;AACA,W;AACA,O;AACA,qB;AACA,iB;AACA,M;AACA,wC;AACA,qF;AACA,4D;AACA,iE;AACA,W;AACA,O;AACA,oC;AACA,U;AACA,+E;AACA,G;;AAEA,6E;AACA,e;AACA,sE;AACA,W;AACA,wC;AACA,I;AACA,K;AACA,G;;AAEA,kC;AACA,iE;AACA,gD;;AAEA,G;;AAEA,0B;AACA,sC;;AAEA,0D;;AAEA,2D;AACA,0B;AACA,0D;AACA,W;AACA,O;AACA,gC;AACA,G;;AAEA,qD;AACA,uB;AACA,oD;AACA,W;AACA,O;AACA,0B;AACA,G;;AAEA,wE;AACA,oD;AACA,yD;AACA,U;AACA,M;AACA,+B;;AAEA,qC;AACA,U;;AAEA,+B;AACA,uB;;AAEA,0E;AACA,wC;AACA,4D;AACA,I;;AAEA,uC;;AAEA,+D;AACA,yE;AACA,4D;AACA,8C;AACA,yC;AACA,qF;AACA,Y;AACA,qC;AACA,K;AACA,W;AACA,oF;AACA,I;AACA,K;;AAEA,+B;AACA,U;;AAEA,gD;AACA,e;AACA,sE;AACA,W;AACA,wC;AACA,I;AACA,K;AACA,G;;AAEA,kC;AACA,sC;;AAEA,+D;AACA,kC;AACA,4B;AACA,gB;AACA,uB;AACA,c;AACA,uE;AACA,Q;AACA,sE;AACA,M;AACA,U;AACA,oE;AACA,G;AACA,G;;AAEA,kC;AACA,sC;;AAEA,wE;AACA,2D;;AAEA,wE;AACA,oD;AACA,yD;AACA,U;;AAEA,qC;AACA,U;;AAEA,kE;AACA,e;AACA,sE;AACA,W;AACA,wD;;AAEA,0C;AACA,kC;AACA,yC;AACA,a;AACA,I;AACA,K;AACA,G;;AAEA,+C;AACA,wE;AACA,+D;AACA,+B;AACA,yE;AACA,qD;AACA,oC;AACA,+E;AACA,iB;AACA,I;AACA,G;AACA,c;AACA,G;AACA,K;;;;;;;;;;;;;;;;;;AC1kBA,a;AACA,mB;AACA,yD;;;AAGA,G;AACA,4D;AACA,qE;AACA,oE;AACA,+C;AACA,G;;AAEA,oC;AACA,8E;AACA,E;;AAEA,oC;AACA,8E;AACA,E;;AAEA,oE;AACA,oE;AACA,kE;AACA,4B;AACA,mC;AACA,qE;AACA,gC;AACA,e;AACA,wD;AACA,gD;AACA,M;AACA,G;AACA,I;;AAEA,G;AACA,gC;AACA,G;;AAEA,uC;AACA,iE;AACA,2B;AACA,mB;AACA,I;AACA,4D;AACA,4B;AACA,oB;AACA,I;AACA,iE;AACA,2B;AACA,uD;AACA,+B;AACA,0D;AACA,G;AACA,I;;AAEA,iC;AACA,sC;AACA,iF;AACA,4D;AACA,U;;AAEA,yB;AACA,8D;AACA,oB;AACA,gB;AACA,uE;AACA,Y;AACA,yD;AACA,iC;AACA,4D;AACA,K;AACA,M;AACA,G;;AAEA,wC;AACA,mC;AACA,wD;AACA,G;AACA,I;;AAEA,sD;AACA,mE;AACA,iB;AACA,G;;AAEA,G;AACA,gC;AACA,G;;AAEA,uC;AACA,4D;AACA,mB;AACA,I;AACA,wD;AACA,4B;AACA,oB;AACA,I;AACA,mE;AACA,uD;AACA,+B;AACA,wB;AACA,G;AACA,I;;AAEA,iC;AACA,sC;AACA,0E;AACA,yD;AACA,U;;AAEA,yB;AACA,2D;AACA,oB;AACA,gB;AACA,uE;AACA,Y;AACA,yD;AACA,iC;AACA,0B;AACA,K;AACA,M;AACA,G;;AAEA,wC;AACA,mC;AACA,wD;AACA,G;AACA,I;;AAEA,sD;AACA,+D;AACA,iB;AACA,G;;AAEA,G;AACA,oC;AACA,G;;AAEA,2C;AACA,qD;AACA,uD;AACA,G;AACA,I;;AAEA,4C;AACA,uB;AACA,sD;AACA,2B;AACA,6D;AACA,W;AACA,I;AACA,uD;AACA,G;AACA,I;;;AAGA,G;AACA,uC;AACA,G;;AAEA,gE;AACA,yE;AACA,qB;AACA,K;;AAEA,8C;AACA,uD;AACA,uC;AACA,G;AACA,I;;AAEA,+C;AACA,uB;AACA,sG;AACA,2D;AACA,G;AACA,I;;;AAGA,G;AACA,wC;AACA,G;;AAEA,+C;AACA,oE;AACA,2B;AACA,wE;AACA,4D;AACA,I;AACA,0E;AACA,uE;AACA,0E;AACA,gE;AACA,wF;AACA,yB;AACA,yB;AACA,M;AACA,mD;AACA,6D;AACA,+D;AACA,0C;AACA,O;;AAEA,mC;AACA,iF;AACA,e;AACA,6E;AACA,S;AACA,2E;AACA,8D;AACA,O;AACA,I;AACA,I;AACA,6E;AACA,6E;AACA,wE;AACA,yC;AACA,kE;AACA,oE;AACA,uE;AACA,yB;AACA,G;AACA,I;;AAEA,oE;AACA,8D;AACA,6D;AACA,sC;AACA,oE;AACA,kC;AACA,qE;AACA,K;;AAEA,oF;AACA,G;;AAEA,kE;AACA,uD;AACA,iE;AACA,sF;AACA,8E;AACA,G;;AAEA,uC;AACA,iE;AACA,2B;AACA,G;;AAEA,gD;AACA,mC;AACA,gC;AACA,I;;AAEA,uB;AACA,wE;AACA,I;;AAEA,kC;AACA,sC;AACA,0D;AACA,I;;AAEA,4B;AACA,6E;AACA,G;AACA,I;;;AAGA,E;;;;AAIA,+E;AACA,iC;AACA,uC;AACA,oD;AACA,G;;AAEA,K","sourcesContent":["if (!Accounts.ui)\n\tAccounts.ui = {};\n\nif (!Accounts.ui._options) {\n\tAccounts.ui._options = {\n\t\trequestPermissions: {},\n\t\textraSignupFields: []\n\t};\n}\n\nAccounts.ui.navigate = function (route, hash) {\n\t// if router is iron-router\n\tif(window.Router && _.isFunction(Router.go)) {\n\t\tRouter.go(route, hash);\n\t}\n}\n\nAccounts.ui.config = function(options) {\n\t// validate options keys\n\tvar VALID_KEYS = ['passwordSignupFields', 'requestPermissions', 'extraSignupFields', 'requestOfflineToken'];\n\t_.each(_.keys(options), function(key) {\n\t\tif (!_.contains(VALID_KEYS, key))\n\t\t\tthrow new Error(\"Accounts.ui.config: Invalid key: \" + key);\n\t});\n\t\n\toptions.extraSignupFields = options.extraSignupFields || []\n\t// deal with `passwordSignupFields`\n\tif (options.passwordSignupFields) {\n\t\tif (_.contains([\n\t\t\t\"USERNAME_AND_EMAIL_CONFIRM\",\n\t\t\t\"USERNAME_AND_EMAIL\",\n\t\t\t\"USERNAME_AND_OPTIONAL_EMAIL\",\n\t\t\t\"USERNAME_ONLY\",\n\t\t\t\"EMAIL_ONLY\"\n\t\t], options.passwordSignupFields)) {\n\t\t\tif (Accounts.ui._options.passwordSignupFields)\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n\t\t\telse\n\t\t\t\tAccounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n\t\t} else {\n\t\t\tthrow new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\n\t\t}\n\t}\n\n\t// deal with `requestPermissions`\n\tif (options.requestPermissions) {\n\t\t_.each(options.requestPermissions, function(scope, service) {\n\t\t\tif (Accounts.ui._options.requestPermissions[service]) {\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\n\t\t\t} else if (!(scope instanceof Array)) {\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n\t\t\t} else {\n\t\t\t\tAccounts.ui._options.requestPermissions[service] = scope;\n\t\t\t}\n\t\t});\n\t\tif (typeof options.extraSignupFields !== 'object' || !options.extraSignupFields instanceof Array) {\n\t\t\tthrow new Error(\"Accounts.ui.config: `extraSignupFields` must be an array.\");\n\t\t} else {\n\t\t\tif (options.extraSignupFields) {\n\t\t\t\t_.each(options.extraSignupFields, function(field, index) {\n\t\t\t\t\tif (!field.fieldName || !field.fieldLabel)\n\t\t\t\t\t\tthrow new Error(\"Accounts.ui.config: `extraSignupFields` objects must have `fieldName` and `fieldLabel` attributes.\");\n\t\t\t\t\tif (typeof field.visible === 'undefined')\n\t\t\t\t\t\tfield.visible = true;\n\t\t\t\t\tAccounts.ui._options.extraSignupFields[index] = field;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\nAccounts.ui._passwordSignupFields = function() {\n\treturn Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY\";\n};\n","i18n.map(\"en\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Reset your password\",\n\t\tnewPassword: \"New password\",\n\t\tcancel: \"Cancel\",\n\t\tsubmit: \"Set password\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Choose a password\",\n\t\tnewPassword: \"New password\",\n\t\tcancel: \"Close\",\n\t\tsubmit: \"Set password\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Email address verified\",\n\t\tdismiss: \"Dismiss\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Dismiss\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Change password\",\n\t\tsignOut: \"Sign out\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Sign in\",\n\t\tup: \"up\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"or\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Create\",\n\t\tsignIn: \"Sign in\",\n\t\tforgot: \"Forgot password?\",\n\t\tcreateAcc: \"Create account\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Reset password\",\n\t\tsent: \"Email sent\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancel\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Change password\",\n\t\tcancel: \"Cancel\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Sign in with\",\n\t\tconfigure: \"Configure\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Sign out\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"No login services configured\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Username or Email\",\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\tpassword: \"Password\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (optional)\",\n\t\tpassword: \"Password\",\n\t\tpasswordAgain: \"Password (again)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Current Password\",\n\t\tnewPassword: \"New Password\",\n\t\tnewPasswordAgain: \"New Password (again)\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"Username must be at least 3 characters long\",\n\t\tinvalidEmail: \"Invalid email\",\n\t\tpasswordTooShort: \"Password must be at least 6 characters long\",\n\t\tpasswordsDontMatch: \"Passwords don't match\"\n\t}\n})","i18n.map(\"es\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Restablece tu contraseña\",\n\t\tnewPassword: \"Nueva contraseña\",\n\t\tcancel: \"Cancelar\",\n\t\tsubmit: \"Guardar\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Escribe una contraseña\",\n\t\tnewPassword: \"Nueva contraseña\",\n\t\tcancel: \"Cerrar\",\n\t\tsubmit: \"Guardar contraseña\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Correo electrónico verificado\",\n\t\tdismiss: \"Cerrar\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Cerrar\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Cambiar contraseña\",\n\t\tsignOut: \"Cerrar sesión\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Iniciar sesión\",\n\t\tup: \"registrarse\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"o\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Crear\",\n\t\tsignIn: \"Iniciar sesión\",\n\t\tforgot: \"Ha olvidado su contraseña?\",\n\t\tcreateAcc: \"Registrarse\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Correo electrónico\",\n\t\treset: \"Restablecer contraseña\",\n\t\tsent: \"Email enviado\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancelar\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Cambiar contraseña\",\n\t\tcancel: \"Cancelar\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Inicia sesión con\",\n\t\tconfigure: \"Configurar\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Cerrar sesión\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"No hay ningún servicio configurado\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Usuario o contraseña\",\n\t\tusername: \"Usuario\",\n\t\temail: \"Correo electrónico\",\n\t\tpassword: \"Contraseña\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Usuario\",\n\t\temail: \"Correo electrónico\",\n\t\temailOpt: \"Correo elect. (opcional)\",\n\t\tpassword: \"Contraseña\",\n\t\tpasswordAgain: \"Contraseña (otra vez)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Contraseña Actual\",\n\t\tnewPassword: \"Nueva Contraseña\",\n\t\tnewPasswordAgain: \"Nueva Contraseña (otra vez)\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"El nombre de usuario tiene que tener 3 caracteres como mínimo\",\n\t\tinvalidEmail: \"Correo electrónico inválido\",\n\t\tpasswordTooShort: \"La contraseña tiene que tener 3 caracteres como mínimo\",\n\t\tpasswordsDontMatch: \"Las contraseñas no son iguales\"\n\t}\n})","i18n.map(\"ca\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Restablir la contrasenya\",\n\t\tnewPassword: \"Nova contrasenya\",\n\t\tcancel: \"Cancel·lar\",\n\t\tsubmit: \"Guardar\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Escriu una contrasenya\",\n\t\tnewPassword: \"Nova contrasenya\",\n\t\tcancel: \"Tancar\",\n\t\tsubmit: \"Guardar contrasenya\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Adreça electrònica verificada\",\n\t\tdismiss: \"Tancar\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Tancar\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Canviar contrasenya\",\n\t\tsignOut: \"Tancar sessió\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Iniciar sessió\",\n\t\tup: \"Registrar-se\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"o bé\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Crear\",\n\t\tsignIn: \"Iniciar sessió\",\n\t\tforgot: \"Ha oblidat la contrasenya?\",\n\t\tcreateAcc: \"Registrar-se\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Adreça electrònica\",\n\t\treset: \"Restablir contrasenya\",\n\t\tsent: \"Email enviat\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancel·lar\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Canviar contrasenya\",\n\t\tcancel: \"Cancel·lar\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Inicia sessió amb\",\n\t\tconfigure: \"Configurar\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Tancar sessió\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"No hi ha cap servei configurat\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Usuari o contrasenya\",\n\t\tusername: \"Usuari\",\n\t\temail: \"Adreça electrònica\",\n\t\tpassword: \"Contrasenya\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Usuari\",\n\t\temail: \"Adreça electrònica\",\n\t\temailOpt: \"Adreça elect. (opcional)\",\n\t\tpassword: \"Contrasenya\",\n\t\tpasswordAgain: \"Contrasenya (un altre cop)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Contrasenya Actual\",\n\t\tnewPassword: \"Nova Contrasenya\",\n\t\tnewPasswordAgain: \"Nova Contrasenya (un altre cop)\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"El nom d'usuari ha de tenir 3 caracters com a mínim\",\n\t\tinvalidEmail: \"Adreça electrònica invàlida\",\n\t\tpasswordTooShort: \"La contrasenya ha de tenir 3 caracters como a mínim\",\n\t\tpasswordsDontMatch: \"Les contrasenyes no són iguals\"\n\t}\n})","i18n.map(\"fr\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Réinitialiser mon mot de passe\",\n\t\tnewPassword: \"Nouveau mot de passe\",\n\t\tcancel: \"Annuler\",\n\t\tsubmit: \"Définir le mot de passe\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Choisir un mot de passe\",\n\t\tnewPassword: \"Nouveau mot de passe\",\n\t\tcancel: \"Fermer\",\n\t\tsubmit: \"Définir le mot de passe\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"L'adresse email a été vérifiée\",\n\t\tdismiss: \"Fermer\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Fermer\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Changer le mot de passe\",\n\t\tsignOut: \"Déconnexion\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Connexion\",\n\t\tup: \"Inscription\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"ou\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Créer\",\n\t\tsignIn: \"Connexion\",\n\t\tforgot: \"Mot de passe oublié ?\",\n\t\tcreateAcc: \"Inscription\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Réinitialiser le mot de passe\",\n\t\tsent: \"Email envoyé\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Annuler\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Changer le mot de passe\",\n\t\tcancel: \"Annuler\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Se connecter avec\",\n\t\tconfigure: \"Configurer\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Déconnexion\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Aucun service d'authentification n'est configuré\"\n\t},\n\tloginFields: {\n\t\tsernameOrEmail: \"Nom d'utilisateur ou email\",\n\t\tsername: \"Nom d'utilisateur\",\n\t\tmail: \"Email\",\n\t\tassword: \"Mot de passe\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Nom d'utilisateur\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (optionnel)\",\n\t\tpassword: \"Mot de passe\",\n\t\tpasswordAgain: \"Mot de passe (confirmation)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Mot de passe actuel\",\n\t\tnewPassword: \"Nouveau mot de passe\",\n\t\tnewPasswordAgain: \"Nouveau mot de passe (confirmation)\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"Username must be at least 3 characters long\",\n\t\tinvalidEmail: \"Invalid email\",\n\t\tpasswordTooShort: \"Password must be at least 6 characters long\",\n\t\tpasswordsDontMatch: \"Passwords don't match\"\n\t}\n})","i18n.map(\"de\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Password zurücksetzten\",\n\t\tnewPassword: \"Neues Password\",\n\t\tcancel: \"Abbrechen\",\n\t\tsubmit: \"Password ändern\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Password wählen\",\n\t\tnewPassword: \"Neues Password\",\n\t\tcancel: \"Schließen\",\n\t\tsubmit: \"Password ändern\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Email Adresse verifizieren\",\n\t\tdismiss: \"Schließen\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Schließen\"\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Password ändern\",\n\t\tsignOut: \"Abmeleden\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Anmelden\",\n\t\tup: \"hoch\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"oder\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Erstellen\",\n\t\tsignIn: \"Anmelden\",\n\t\tforgot: \"Password vergessen?\",\n\t\tcreateAcc: \"Account erstellen\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Password zurücksetzen\",\n\t\tsent: \"Email gesendet\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Abbrechen\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Password ändern\",\n\t\tcancel: \"Abbrechen\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Anmelden mit\",\n\t\tconfigure: \"Konfigurieren\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Abmelden\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Keine Anmelde Services konfiguriert\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Benutzername oder Email\",\n\t\tusername: \"Benutzername\",\n\t\temail: \"Email\",\n\t\tpassword: \"Password\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Benutzername\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (freiwillig)\",\n\t\tpassword: \"Password\",\n\t\tpasswordAgain: \"Password (wiederholen)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Aktuelles Password\",\n\t\tnewPassword: \"Neues Password\",\n\t\tnewPasswordAgain: \"Neues Password (wiederholen)\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"Der Benutzername muss mindestens 3 Buchstaben lang sein\",\n\t\tinvalidEmail: \"Ungültige Email Adresse\",\n\t\tpasswordTooShort: \"Password muss mindestens 6 Zeichen lang sein\",\n\t\tpasswordsDontMatch: \"Die Passwörter stimmen nicht überein\"\n\t}\n})","i18n.map(\"it\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Reimposta la password\",\n\t\tnewPassword: \"Nuova password\",\n\t\tcancel: \"Annulla\",\n\t\tsubmit: \"Imposta password\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Scegli una password\",\n\t\tnewPassword: \"Nuova password\",\n\t\tcancel: \"Chiudi\",\n\t\tsubmit: \"Imposta password\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Indirizzo email verificato\",\n\t\tdismiss: \"Chiudi\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Chiudi\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Cambia password\",\n\t\tsignOut: \"Esci\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Accedi\",\n\t\tup: \"Registrati\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"o\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Crea\",\n\t\tsignIn: \"Accedi\",\n\t\tforgot: \"Password dimenticata?\",\n\t\tcreateAcc: \"Crea un account\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Reimposta la password\",\n\t\tsent: \"Email inviata\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancella\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Cambia password\",\n\t\tcancel: \"Annulla\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Accedi con\",\n\t\tconfigure: \"Configura\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Esci\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Nessun servizio di accesso configurato\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Username o Email\",\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\tpassword: \"Password\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (opzionale)\",\n\t\tpassword: \"Password\",\n\t\tpasswordAgain: \"Password (di nuovo)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Password corrente\",\n\t\tnewPassword: \"Nuova password\",\n\t\tnewPasswordAgain: \"Nuova password (di nuovo)\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"La Username deve essere almeno di 3 caratteri\",\n\t\tinvalidEmail: \"Email non valida\",\n\t\tpasswordTooShort: \"La Password deve essere almeno di 6 caratteri\",\n\t\tpasswordsDontMatch: \"Le password non corrispondono\"\n\t}\n});\n","i18n.map(\"pt\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Esqueceu sua senha?\",\n\t\tnewPassword: \"Nova senha\",\n\t\tcancel: \"Cancelar\",\n\t\tsubmit: \"Alterar senha\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Digite a nova senha\",\n\t\tnewPassword: \"Nova senha\",\n\t\tcancel: \"Fechar\",\n\t\tsubmit: \"Alterar senha\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"E-mail verificado!\",\n\t\tdismiss: \"Ignorar\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Ignorar\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Mudar senha\",\n\t\tsignOut: \"Sair\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Entrar\",\n\t\tup: \"Cadastrar\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"ou\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Criar\",\n\t\tsignIn: \"Login\",\n\t\tforgot: \"Esqueceu sua senha?\",\n\t\tcreateAcc: \"Cadastrar\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"E-mail\",\n\t\treset: \"Alterar senha\",\n\t\tsent: \"E-mail enviado\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancelar\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Mudar senha\",\n\t\tcancel: \"Cancelar\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Logar com\",\n\t\tconfigure: \"Configurar\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Sair\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Nenhum servico de login configurado\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Usuário ou E-mail\",\n\t\tusername: \"Usuário\",\n\t\temail: \"E-mail\",\n\t\tpassword: \"Senha\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Usuário\",\n\t\temail: \"E-mail\",\n\t\temailOpt: \"E-mail (opcional)\",\n\t\tpassword: \"Senha\",\n\t\tpasswordAgain: \"Senha (confirmacão)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Senah atual\",\n\t\tnewPassword: \"Nova Senha\",\n\t\tnewPasswordAgain: \"Nova Senha (confirmacao)\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"Usuário precisa ter mais de 3 caracteres\",\n\t\tinvalidEmail: \"E-mail inválido\",\n\t\tpasswordTooShort: \"Senha precisa ter mais de 6 caracteres\",\n\t\tpasswordsDontMatch: \"Senhas estão diferentes\"\n\t}\n})\n","i18n.setDefaultLanguage('en')\n\naccountsUIBootstrap3 = {\n\tsetLanguage: function (lang) {\n\t\treturn i18n.setLanguage(lang)\n\t},\n\tgetLanguage: function () {\n\t\treturn i18n.getLanguage()\n\t},\n\tmap: function (lang, obj) {\n\t\treturn i18n.map(lang, obj)\n\t}\n}","\nTemplate.__checkName(\"_loginButtons\");\nTemplate[\"_loginButtons\"] = new Template(\"Template._loginButtons\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"loggingIn\"));\n    }, function() {\n      return [ \"\\n\t\t\t\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"dropdown\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n\t\t\t\" ];\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.DIV({\n          \"class\": \"login-buttons-with-only-one-button\"\n        }, \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInSingleLoginButton\")), \"\\n\t\t\t\t\"), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedIn\")), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOut\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedIn\");\nTemplate[\"_loginButtonsLoggedIn\"] = new Template(\"Template._loginButtonsLoggedIn\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"dropdown\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInDropdown\")), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInSingleLogoutButton\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOut\");\nTemplate[\"_loginButtonsLoggedOut\"] = new Template(\"Template._loginButtonsLoggedOut\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"services\"));\n  }, function() {\n    return [ \" \\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"configurationLoaded\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"dropdown\"));\n      }, function() {\n        return [ \" \\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutDropdown\")), \"\\n\t\t\t\" ];\n      }, function() {\n        return [ \"\\n\t\t\t\t\", Spacebars.With(function() {\n          return Spacebars.call(view.lookup(\"singleService\"));\n        }, function() {\n          return [ \" \\n\t\t\t\t\t\t\", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"loggingIn\"));\n          }, function() {\n            return [ \"\\n\t\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInSingleLoginButton\")), \"\\n\t\t\t\t\t\t\" ];\n          }, function() {\n            return [ \"\\n\t\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n\t\t\t\t\t\t\" ];\n          }), \"\\n\t\t\t\t\" ];\n        }), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"no-services\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOut.noLoginServices\");\n    })), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsMessages\");\nTemplate[\"_loginButtonsMessages\"] = new Template(\"Template._loginButtonsMessages\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"errorMessage\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"alert alert-danger\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n\t\" ];\n  }), \"\\n\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"infoMessage\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"alert alert-success no-margin\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"infoMessage\"));\n    })), \"\\n\t\" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggingIn\");\nTemplate[\"_loginButtonsLoggingIn\"] = new Template(\"Template._loginButtonsLoggingIn\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInPadding\")), HTML.Raw('\\n\t<div class=\"loading\">&nbsp;</div>\\n\t'), Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInPadding\")) ];\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggingInPadding\");\nTemplate[\"_loginButtonsLoggingInPadding\"] = new Template(\"Template._loginButtonsLoggingInPadding\", (function() {\n  var view = this;\n  return Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"dropdown\"));\n  }, function() {\n    return [ \"\\n\t\t\\n\t\t\", HTML.DIV({\n      \"class\": \"login-buttons-padding\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"login-button single-login-button\",\n      style: \"visibility: hidden;\",\n      id: \"login-buttons-logout\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    })), \"\\n\t\t\"), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\\n\t\t\", HTML.DIV({\n      \"class\": \"login-buttons-padding\"\n    }), \"\\n\t\" ];\n  });\n}));\n","\nTemplate.__checkName(\"_loginButtonsLoggedOutSingleLoginButton\");\nTemplate[\"_loginButtonsLoggedOutSingleLoginButton\"] = new Template(\"Template._loginButtonsLoggedOutSingleLoginButton\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"navbar-form\"\n  }, \"\\n\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"configured\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.BUTTON({\n      \"class\": function() {\n        return [ \"login-button btn btn-block btn-\", Spacebars.mustache(view.lookup(\"capitalizedName\")) ];\n      }\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutSingleLoginButton.signInWith\");\n    }), \" \", Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"capitalizedName\"));\n    })), \"\\n\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.BUTTON({\n      \"class\": \"login-button btn btn-block configure-button btn-danger\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutSingleLoginButton.configure\");\n    }), \" \", Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"capitalizedName\"));\n    })), \"\\n\t\t\" ];\n  }), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggingInSingleLoginButton\");\nTemplate[\"_loginButtonsLoggingInSingleLoginButton\"] = new Template(\"Template._loginButtonsLoggingInSingleLoginButton\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"login-text-and-button\"\n  }, \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedInSingleLogoutButton\");\nTemplate[\"_loginButtonsLoggedInSingleLogoutButton\"] = new Template(\"Template._loginButtonsLoggedInSingleLogoutButton\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n\t\t\", HTML.A({\n    href: \"#\",\n    id: \"login-buttons-logout\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"displayName\"));\n  }), \" \", Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedInSingleLogoutButton.signOut\");\n  })), \"\\n\t\");\n}));\n","\nTemplate.__checkName(\"_loginButtonsLoggedInDropdown\");\nTemplate[\"_loginButtonsLoggedInDropdown\"] = new Template(\"Template._loginButtonsLoggedInDropdown\", (function() {\n  var view = this;\n  return HTML.LI({\n    id: \"login-dropdown-list\",\n    \"class\": \"dropdown\"\n  }, \"\\n\t\t\", HTML.A({\n    \"class\": \"dropdown-toggle\",\n    \"data-toggle\": \"dropdown\"\n  }, \"\\n\t\t\t\", Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"displayName\"));\n  }), \"\\n\t\t\t\", Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"user_profile_picture\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.IMG({\n      src: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      width: \"30px\",\n      \"class\": \"img-circular\",\n      alt: \"#\"\n    }), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\t\", HTML.Raw('<b class=\"caret\"></b>'), \"\\n\t\t\"), \"\\n\t\t\", HTML.DIV({\n    \"class\": \"dropdown-menu col-sm-3\"\n  }, \"\\n\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inMessageOnlyFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inChangePasswordFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsChangePassword\")), \"\\n\t\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInDropdownActions\")), \"\\n\t\t\t\t\" ];\n    }), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedInDropdownActions\");\nTemplate[\"_loginButtonsLoggedInDropdownActions\"] = new Template(\"Template._loginButtonsLoggedInDropdownActions\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"additionalLoggedInDropdownActions\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsAdditionalLoggedInDropdownActions\")), \"\\n\t\" ];\n  }), \"\\n\\n\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"allowChangingPassword\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-default btn-block\",\n      id: \"login-buttons-open-change-password\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedInDropdownActions.password\");\n    })), \"\\n\t\" ];\n  }), \"\\n\\n\t\", HTML.BUTTON({\n    \"class\": \"btn btn-block btn-primary\",\n    id: \"login-buttons-logout\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedInDropdownActions.signOut\");\n  })) ];\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutDropdown\");\nTemplate[\"_loginButtonsLoggedOutDropdown\"] = new Template(\"Template._loginButtonsLoggedOutDropdown\", (function() {\n  var view = this;\n  return HTML.LI({\n    id: \"login-dropdown-list\",\n    \"class\": \"dropdown\"\n  }, \"\\n\t\t\", HTML.A({\n    \"class\": \"dropdown-toggle\",\n    \"data-toggle\": \"dropdown\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutDropdown.signIn\");\n  }), Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"forbidClientAccountCreation\"));\n  }, function() {\n    return [ \" / \", Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutDropdown.up\");\n    }) ];\n  }), \" \", HTML.Raw('<b class=\"caret\"></b>')), \"\\n\t\t\", HTML.DIV({\n    \"class\": \"dropdown-menu\"\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutAllServices\")), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutAllServices\");\nTemplate[\"_loginButtonsLoggedOutAllServices\"] = new Template(\"Template._loginButtonsLoggedOutAllServices\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"services\"));\n  }, function() {\n    return [ \"\\n\t\", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"hasPasswordService\"));\n    }, function() {\n      return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\" ];\n    }), \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isPasswordService\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasOtherServices\"));\n      }, function() {\n        return [ \" \\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutPasswordServiceSeparator\")), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutPasswordService\")), \"\\n\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutPasswordServiceSeparator\");\nTemplate[\"_loginButtonsLoggedOutPasswordServiceSeparator\"] = new Template(\"Template._loginButtonsLoggedOutPasswordServiceSeparator\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"or\"\n  }, HTML.Raw('\\n\t\t<span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n\t\t'), HTML.SPAN({\n    \"class\": \"or-text\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordServiceSeparator.or\");\n  })), HTML.Raw('\\n\t\t<span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n\t'));\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutPasswordService\");\nTemplate[\"_loginButtonsLoggedOutPasswordService\"] = new Template(\"Template._loginButtonsLoggedOutPasswordService\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inForgotPasswordFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_forgotPasswordForm\")), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"fields\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsFormField\")), \"\\n\t\t\" ];\n    }), \"\\n\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary col-sm-12\",\n      id: \"login-buttons-password\",\n      type: \"button\"\n    }, \"\\n\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inSignupFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.create\");\n      }), \"\\n\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.signIn\");\n      }), \"\\n\t\t\t\" ];\n    }), \"\\n\t\t\"), \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inLoginFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", HTML.DIV({\n        id: \"login-other-options\"\n      }, \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showForgotPasswordLink\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.A({\n          id: \"forgot-password-link\",\n          \"class\": \"pull-left\"\n        }, Blaze.View(function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.forgot\");\n        })), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showCreateAccountLink\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.A({\n          id: \"signup-link\",\n          \"class\": \"pull-right\"\n        }, Blaze.View(function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.createAcc\");\n        })), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\"), \"\\n\t\t\" ];\n    }), \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inSignupFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_forgotPasswordForm\");\nTemplate[\"_forgotPasswordForm\"] = new Template(\"Template._forgotPasswordForm\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"login-form\"\n  }, \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\", HTML.DIV({\n    id: \"forgot-password-email-label-and-input\"\n  }, \" \\n\t\t\t\", HTML.INPUT({\n    id: \"forgot-password-email\",\n    type: \"email\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"forgotPasswordForm.email\");\n    },\n    \"class\": \"form-control\"\n  }), \"\\n\t\t\"), \"\\n\t\t\", HTML.BUTTON({\n    \"class\": \"btn btn-primary login-button-form-submit col-sm-12\",\n    id: \"login-buttons-forgot-password\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"forgotPasswordForm.reset\");\n  })), \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsBackToLoginLink\");\nTemplate[\"_loginButtonsBackToLoginLink\"] = new Template(\"Template._loginButtonsBackToLoginLink\", (function() {\n  var view = this;\n  return HTML.BUTTON({\n    id: \"back-to-login-link\",\n    \"class\": \"btn btn-default col-sm-12\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsBackToLoginLink.back\");\n  }));\n}));\n\nTemplate.__checkName(\"_loginButtonsFormField\");\nTemplate[\"_loginButtonsFormField\"] = new Template(\"Template._loginButtonsFormField\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.INPUT({\n      id: function() {\n        return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")) ];\n      },\n      type: function() {\n        return Spacebars.mustache(view.lookup(\"inputType\"));\n      },\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"fieldLabel\"));\n      },\n      \"class\": \"form-control\"\n    }), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsChangePassword\");\nTemplate[\"_loginButtonsChangePassword\"] = new Template(\"Template._loginButtonsChangePassword\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"fields\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsFormField\")), \"\\n\t\" ];\n  }), \"\\n\t\", HTML.BUTTON({\n    \"class\": \"btn btn-primary\",\n    id: \"login-buttons-do-change-password\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsChangePassword.submit\");\n  })), \"\\n\t\", HTML.BUTTON({\n    \"class\": \"btn btn-default\",\n    id: \"login-buttons-cancel-change-password\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsChangePassword.cancel\");\n  })) ];\n}));\n","\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"_resetPasswordDialog\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"_enrollAccountDialog\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"_justVerifiedEmailDialog\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"_configureLoginServiceDialog\")), HTML.Raw(\"\\n\\n\t<!-- if we're not showing a dropdown, we need some other place to show messages -->\\n\t\"), Spacebars.include(view.lookupTemplate(\"_loginButtonsMessagesDialog\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"_resetPasswordDialog\");\nTemplate[\"_resetPasswordDialog\"] = new Template(\"Template._resetPasswordDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inResetPasswordFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"login-buttons-reset-password-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-header\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      type: \"button\",\n      \"class\": \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-hidden\": \"true\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    })), \"\\n\t\t\t\t\t\t\", HTML.H4({\n      \"class\": \"modal-title\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.title\");\n    })), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.INPUT({\n      id: \"reset-password-new-password\",\n      \"class\": \"form-control\",\n      type: \"password\",\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.newPassword\");\n      }\n    }), \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.A({\n      \"class\": \"btn btn-default\",\n      id: \"login-buttons-cancel-reset-password\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.cancel\");\n    })), \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary\",\n      id: \"login-buttons-reset-password-button\"\n    }, \"\\n\t\t\t\t\t\t\t\", Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.submit\");\n    }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), HTML.Comment(\" /.modal-content \"), \"\\n\t\t\t\"), HTML.Comment(\" /.modal-dalog \"), \"\\n\t\t\"), HTML.Comment(\" /.modal \"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_enrollAccountDialog\");\nTemplate[\"_enrollAccountDialog\"] = new Template(\"Template._enrollAccountDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inEnrollAccountFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"login-buttons-enroll-account-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-header\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      type: \"button\",\n      \"class\": \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-hidden\": \"true\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    })), \"\\n\t\t\t\t\t\t\", HTML.H4({\n      \"class\": \"modal-title\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.title\");\n    })), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.INPUT({\n      id: \"enroll-account-password\",\n      \"class\": \"form-control\",\n      type: \"password\",\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.newPassword\");\n      }\n    }), \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.A({\n      \"class\": \"btn btn-default\",\n      id: \"login-buttons-cancel-enroll-account-button\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.cancel\");\n    })), \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary\",\n      id: \"login-buttons-enroll-account-button\"\n    }, \"\\n\t\t\t\t\t\t\t\", Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.submit\");\n    }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), HTML.Comment(\" /.modal-content \"), \"\\n\t\t\t\"), HTML.Comment(\" /.modal-dalog \"), \"\\n\t\t\"), HTML.Comment(\" /.modal \"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_justVerifiedEmailDialog\");\nTemplate[\"_justVerifiedEmailDialog\"] = new Template(\"Template._justVerifiedEmailDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"login-buttons-email-address-verified-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.H4(HTML.B(Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"justVerifiedEmailDialog.verified\");\n    }))), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-info login-button\",\n      id: \"just-verified-dismiss-button\",\n      \"data-dismiss\": \"modal\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"justVerifiedEmailDialog.dismiss\");\n    })), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_configureLoginServiceDialog\");\nTemplate[\"_configureLoginServiceDialog\"] = new Template(\"Template._configureLoginServiceDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"configure-login-service-dialog-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-header\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\", HTML.H4({\n      \"class\": \"modal-title\"\n    }, \"Configure Service\"), \"\\n\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\", HTML.DIV({\n      id: \"configure-login-service-dialog\",\n      \"class\": \"accounts-dialog accounts-centered-dialog\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"configurationSteps\")), \"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.P(\"\\n\t\t\t\t\t\t\t\t\t\t\tNow, copy over some details.\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.P(\"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.TABLE(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.COLGROUP(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.COL({\n      span: \"1\",\n      \"class\": \"configuration_labels\"\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.COL({\n      span: \"1\",\n      \"class\": \"configuration_inputs\"\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"configurationFields\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.TR(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.TD(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.LABEL({\n        \"for\": function() {\n          return [ \"configure-login-service-dialog-\", Spacebars.mustache(view.lookup(\"property\")) ];\n        }\n      }, Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"label\"));\n      })), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.TD(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.INPUT({\n        id: function() {\n          return [ \"configure-login-service-dialog-\", Spacebars.mustache(view.lookup(\"property\")) ];\n        },\n        type: \"text\"\n      }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer new-section\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"login-button btn btn-danger configure-login-service-dismiss-button\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\tI'll do this later\\n\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": function() {\n        return [ \"login-button login-button-configure btn btn-success \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"saveDisabled\"));\n        }, function() {\n          return \"login-button-disabled\";\n        }) ];\n      },\n      id: \"configure-login-service-dialog-save-configuration\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\tSave Configuration\\n\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsMessagesDialog\");\nTemplate[\"_loginButtonsMessagesDialog\"] = new Template(\"Template._loginButtonsMessagesDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"accounts-dialog accounts-centered-dialog\",\n      id: \"login-buttons-message-dialog\"\n    }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"login-button\",\n      id: \"messages-dialog-dismiss-button\"\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsMessagesDialog.dismiss\");\n    })), \"\\n\t\t\"), \"\\n\t\" ];\n  });\n}));\n","(function () {\n\tvar VALID_KEYS = [\n\t\t'dropdownVisible',\n\n\t\t// XXX consider replacing these with one key that has an enum for values.\n\t\t'inSignupFlow',\n\t\t'inForgotPasswordFlow',\n\t\t'inChangePasswordFlow',\n\t\t'inMessageOnlyFlow',\n\n\t\t'errorMessage',\n\t\t'infoMessage',\n\n\t\t// dialogs with messages (info and error)\n\t\t'resetPasswordToken',\n\t\t'enrollAccountToken',\n\t\t'justVerifiedEmail',\n\n\t\t'configureLoginServiceDialogVisible',\n\t\t'configureLoginServiceDialogServiceName',\n\t\t'configureLoginServiceDialogSaveDisabled'\n\t];\n\n\tvar validateKey = function (key) {\n\t\tif (!_.contains(VALID_KEYS, key))\n\t\t\tthrow new Error(\"Invalid key in loginButtonsSession: \" + key);\n\t};\n\n\tvar KEY_PREFIX = \"Meteor.loginButtons.\";\n\n\t// XXX we should have a better pattern for code private to a package like this one\n\tAccounts._loginButtonsSession = {\n\t\tset: function(key, value) {\n\t\t\tvalidateKey(key);\n\t\t\tif (_.contains(['errorMessage', 'infoMessage'], key))\n\t\t\t\tthrow new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\n\t\t\tthis._set(key, value);\n\t\t},\n\n\t\t_set: function(key, value) {\n\t\t\tSession.set(KEY_PREFIX + key, value);\n\t\t},\n\n\t\tget: function(key) {\n\t\t\tvalidateKey(key);\n\t\t\treturn Session.get(KEY_PREFIX + key);\n\t\t},\n\n\t\tcloseDropdown: function () {\n\t\t\tthis.set('inSignupFlow', false);\n\t\t\tthis.set('inForgotPasswordFlow', false);\n\t\t\tthis.set('inChangePasswordFlow', false);\n\t\t\tthis.set('inMessageOnlyFlow', false);\n\t\t\tthis.set('dropdownVisible', false);\n\t\t\tthis.resetMessages();\n\t\t},\n\n\t\tinfoMessage: function(message) {\n\t\t\tthis._set(\"errorMessage\", null);\n\t\t\tthis._set(\"infoMessage\", message);\n\t\t\tthis.ensureMessageVisible();\n\t\t},\n\n\t\terrorMessage: function(message) {\n\t\t\tthis._set(\"errorMessage\", message);\n\t\t\tthis._set(\"infoMessage\", null);\n\t\t\tthis.ensureMessageVisible();\n\t\t},\n\n\t\t// is there a visible dialog that shows messages (info and error)\n\t\tisMessageDialogVisible: function () {\n\t\t\treturn this.get('resetPasswordToken') ||\n\t\t\t\tthis.get('enrollAccountToken') ||\n\t\t\t\tthis.get('justVerifiedEmail');\n\t\t},\n\n\t\t// ensure that somethings displaying a message (info or error) is\n\t\t// visible.  if a dialog with messages is open, do nothing;\n\t\t// otherwise open the dropdown.\n\t\t//\n\t\t// notably this doesn't matter when only displaying a single login\n\t\t// button since then we have an explicit message dialog\n\t\t// (_loginButtonsMessageDialog), and dropdownVisible is ignored in\n\t\t// this case.\n\t\tensureMessageVisible: function () {\n\t\t\tif (!this.isMessageDialogVisible())\n\t\t\t\tthis.set(\"dropdownVisible\", true);\n\t\t},\n\n\t\tresetMessages: function () {\n\t\t\tthis._set(\"errorMessage\", null);\n\t\t\tthis._set(\"infoMessage\", null);\n\t\t},\n\n\t\tconfigureService: function (name) {\n\t\t\tthis.set('configureLoginServiceDialogVisible', true);\n\t\t\tthis.set('configureLoginServiceDialogServiceName', name);\n\t\t\tthis.set('configureLoginServiceDialogSaveDisabled', true);\n\t\t\tsetTimeout(function(){\n\t\t\t\t$('#configure-login-service-dialog-modal').modal();\n\t\t\t}, 500)\n\t\t}\n\t};\n}) ();\n","(function() {\n\tif (!Accounts._loginButtons)\n\t\tAccounts._loginButtons = {};\n\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\tUI.registerHelper(\"loginButtons\", function() {\n\t\treturn Template._loginButtons;\n\t});\n\n\t// shared between dropdown and single mode\n\tTemplate._loginButtons.events({\n\t\t'click #login-buttons-logout': function() {\n\t\t\tMeteor.logout(function() {\n\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t});\n\t\t}\n\t});\n\n\t//\n\t// loginButtonLoggedOut template\n\t//\n\tTemplate._loginButtonsLoggedOut.helpers({\n\t\tdropdown: function() {\n\t\t\treturn Accounts._loginButtons.dropdown();\n\t\t},\n\t\tservices: function() {\n\t\t\treturn Accounts._loginButtons.getLoginServices();\n\t\t},\n\t\tsingleService: function() {\n\t\t\tvar services = Accounts._loginButtons.getLoginServices();\n\t\t\tif (services.length !== 1)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Shouldn't be rendering this template with more than one configured service\");\n\t\t\treturn services[0];\n\t\t},\n\t\tconfigurationLoaded: function() {\n\t\t\treturn Accounts.loginServicesConfigured();\n\t\t}\n\t});\n\n\n\n\t//\n\t// loginButtonsLoggedIn template\n\t//\n\n\t// decide whether we should show a dropdown rather than a row of\n\t// buttons\n\tTemplate._loginButtonsLoggedIn.helpers({\n\t\tdropdown: function() {\n\t\t\treturn Accounts._loginButtons.dropdown();\n\t\t},\n\t\tdisplayName: function() {\n\t\t\treturn Accounts._loginButtons.displayName();\n\t\t}\n\t})\n\n\n\n\t//\n\t// loginButtonsMessage template\n\t//\n\n\tTemplate._loginButtonsMessages.helpers({\n\t\terrorMessage: function() {\n\t\t\treturn loginButtonsSession.get('errorMessage');\n\t\t},\n\t\tinfoMessage: function() {\n\t\t\treturn loginButtonsSession.get('infoMessage');\n\t\t}\n\t});\n\n\n\n\t//\n\t// loginButtonsLoggingInPadding template\n\t//\n\n\n\tTemplate._loginButtonsLoggingInPadding.helpers({\n\t\tdropdown: function() {\n\t\t\treturn Accounts._loginButtons.dropdown();\n\t\t}\n\t});\n\n\t//\n\t// helpers\n\t//\n\n\tAccounts._loginButtons.displayName = function() {\n\t\tvar user = Meteor.user();\n\t\tif (!user)\n\t\t\treturn '';\n\n\t\tif (user.profile && user.profile.name)\n\t\t\treturn user.profile.name;\n\t\tif (user.username)\n\t\t\treturn user.username;\n\t\tif (user.emails && user.emails[0] && user.emails[0].address)\n\t\t\treturn user.emails[0].address;\n\n\t\treturn '';\n\t};\n\n\tAccounts._loginButtons.getLoginServices = function() {\n\t\t// First look for OAuth services.\n\t\tvar services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n\t\t// Be equally kind to all login services. This also preserves\n\t\t// backwards-compatibility. (But maybe order should be\n\t\t// configurable?)\n\t\tservices.sort();\n\n\t\t// Add password, if it's there; it must come last.\n\t\tif (this.hasPasswordService())\n\t\t\tservices.push('password');\n\n\t\treturn _.map(services, function(name) {\n\t\t\treturn {\n\t\t\t\tname: name\n\t\t\t};\n\t\t});\n\t};\n\n\tAccounts._loginButtons.hasPasswordService = function() {\n\t\treturn !!Package['accounts-password'];\n\t};\n\n\tAccounts._loginButtons.dropdown = function() {\n\t\treturn this.hasPasswordService() || Accounts._loginButtons.getLoginServices().length > 1;\n\t};\n\n\t// XXX improve these. should this be in accounts-password instead?\n\t//\n\t// XXX these will become configurable, and will be validated on\n\t// the server as well.\n\tAccounts._loginButtons.validateUsername = function(username) {\n\t\tif (username.length >= 3) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.usernameTooShort'));\n\t\t\treturn false;\n\t\t}\n\t};\n\tAccounts._loginButtons.validateEmail = function(email) {\n\t\tif (Accounts.ui._passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '')\n\t\t\treturn true;\n\n\t\tvar re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\t\tif (re.test(email)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.invalidEmail'));\n\t\t\treturn false;\n\t\t}\n\t};\n\tAccounts._loginButtons.validatePassword = function(password) {\n\t\tif (password.length >= 6) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.passwordTooShort'));\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tAccounts._loginButtons.rendered = function() {\n\t\tdebugger;\n\t};\n\n})();","(function() {\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\tTemplate._loginButtonsLoggedOutSingleLoginButton.events({\n\t\t'click .login-button': function() {\n\t\t\tvar serviceName = this.name;\n\t\t\tloginButtonsSession.resetMessages();\n\t\t\tvar callback = function(err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t\t} else if (err instanceof Accounts.LoginCancelledError) {\n\t\t\t\t\t// do nothing\n\t\t\t\t} else if (err instanceof Accounts.ConfigError) {\n\t\t\t\t\tloginButtonsSession.configureService(serviceName);\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar loginWithService = Meteor[\"loginWith\" + capitalize(serviceName)];\n\n\t\t\tvar options = {}; // use default scope unless specified\n\t\t\tif (Accounts.ui._options.requestPermissions[serviceName])\n\t\t\t\toptions.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\n\n\t\t\tloginWithService(options, callback);\n\t\t}\n\t});\n\n\tTemplate._loginButtonsLoggedOutSingleLoginButton.helpers({\n\t\tconfigured: function() {\n\t\t\treturn !!Accounts.loginServiceConfiguration.findOne({\n\t\t\t\tservice: this.name\n\t\t\t});\n\t\t},\n\t\tcapitalizedName: function() {\n\t\t\tif (this.name === 'github')\n\t\t\t// XXX we should allow service packages to set their capitalized name\n\t\t\t\treturn 'GitHub';\n\t\t\telse\n\t\t\t\treturn capitalize(this.name);\n\t\t}\n\t});\n\n\n\t// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\n\tvar capitalize = function(str) {\n\t\tstr = str == null ? '' : String(str);\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t};\n})();","(function() {\n\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\t// events shared between loginButtonsLoggedOutDropdown and\n\t// loginButtonsLoggedInDropdown\n\tTemplate._loginButtons.events({\n\t\t'click input': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t},\n\t\t'click #login-name-link, click #login-sign-in-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.set('dropdownVisible', true);\n\t\t\tMeteor.flush();\n\t\t},\n\t\t'click .login-close': function() {\n\t\t\tloginButtonsSession.closeDropdown();\n\t\t}\n\t});\n\n\tTemplate._loginButtons.toggleDropdown = function() {\n\t\ttoggleDropdown();\n\t};\n\n\t//\n\t// loginButtonsLoggedInDropdown template and related\n\t//\n\n\tTemplate._loginButtonsLoggedInDropdown.events({\n\t\t'click #login-buttons-open-change-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\t\t\tloginButtonsSession.set('inChangePasswordFlow', true);\n\t\t\tMeteor.flush();\n\t\t}\n\t});\n\n\tTemplate._loginButtonsLoggedInDropdown.helpers({\n\t\tdisplayName: function() {\n\t\t\treturn Accounts._loginButtons.displayName();\n\t\t},\n\n\t\tinChangePasswordFlow: function() {\n\t\t\treturn loginButtonsSession.get('inChangePasswordFlow');\n\t\t},\n\n\t\tinMessageOnlyFlow: function() {\n\t\t\treturn loginButtonsSession.get('inMessageOnlyFlow');\n\t\t},\n\n\t\tdropdownVisible: function() {\n\t\t\treturn loginButtonsSession.get('dropdownVisible');\n\t\t}\n\t});\n\n\n\tTemplate._loginButtonsLoggedInDropdownActions.helpers({\n\t\tallowChangingPassword: function() {\n\t\t\t// it would be more correct to check whether the user has a password set,\n\t\t\t// but in order to do that we'd have to send more data down to the client,\n\t\t\t// and it'd be preferable not to send down the entire service.password document.\n\t\t\t//\n\t\t\t// instead we use the heuristic: if the user has a username or email set.\n\t\t\tvar user = Meteor.user();\n\t\t\treturn user.username || (user.emails && user.emails[0] && user.emails[0].address);\n\t\t},\n\t\tadditionalLoggedInDropdownActions: function() {\n\t\t\treturn Template._loginButtonsAdditionalLoggedInDropdownActions !== undefined;\n\t\t}\n\t});\n\n\n\t//\n\t// loginButtonsLoggedOutDropdown template and related\n\t//\n\n\tTemplate._loginButtonsLoggedOutDropdown.events({\n\t\t'click #login-buttons-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginOrSignup();\n\t\t},\n\n\t\t'keypress #forgot-password-email': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tif (event.keyCode === 13)\n\t\t\t\tforgotPassword();\n\t\t},\n\n\t\t'click #login-buttons-forgot-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tforgotPassword();\n\t\t},\n\n\t\t'click #signup-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\n\t\t\t// store values of fields before swtiching to the signup form\n\t\t\tvar username = trimmedElementValueById('login-username');\n\t\t\tvar email = trimmedElementValueById('login-email');\n\t\t\tvar usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\t\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\t\tvar password = elementValueById('login-password');\n\n\t\t\tloginButtonsSession.set('inSignupFlow', true);\n\t\t\tloginButtonsSession.set('inForgotPasswordFlow', false);\n\n\t\t\t// force the ui to update so that we have the approprate fields to fill in\n\t\t\tMeteor.flush();\n\n\t\t\t// update new fields with appropriate defaults\n\t\t\tif (username !== null)\n\t\t\t\tdocument.getElementById('login-username').value = username;\n\t\t\telse if (email !== null)\n\t\t\t\tdocument.getElementById('login-email').value = email;\n\t\t\telse if (usernameOrEmail !== null)\n\t\t\t\tif (usernameOrEmail.indexOf('@') === -1)\n\t\t\t\t\tdocument.getElementById('login-username').value = usernameOrEmail;\n\t\t\t\telse\n\t\t\t\t\tdocument.getElementById('login-email').value = usernameOrEmail;\n\t\t},\n\t\t'click #forgot-password-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\n\t\t\t// store values of fields before swtiching to the signup form\n\t\t\tvar email = trimmedElementValueById('login-email');\n\t\t\tvar usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\n\t\t\tloginButtonsSession.set('inSignupFlow', false);\n\t\t\tloginButtonsSession.set('inForgotPasswordFlow', true);\n\n\t\t\t// force the ui to update so that we have the approprate fields to fill in\n\t\t\tMeteor.flush();\n\t\t\t//toggleDropdown();\n\n\t\t\t// update new fields with appropriate defaults\n\t\t\tif (email !== null)\n\t\t\t\tdocument.getElementById('forgot-password-email').value = email;\n\t\t\telse if (usernameOrEmail !== null)\n\t\t\t\tif (usernameOrEmail.indexOf('@') !== -1)\n\t\t\t\t\tdocument.getElementById('forgot-password-email').value = usernameOrEmail;\n\t\t},\n\t\t'click #back-to-login-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\n\t\t\tvar username = trimmedElementValueById('login-username');\n\t\t\tvar email = trimmedElementValueById('login-email') || trimmedElementValueById('forgot-password-email'); // Ughh. Standardize on names?\n\n\t\t\tloginButtonsSession.set('inSignupFlow', false);\n\t\t\tloginButtonsSession.set('inForgotPasswordFlow', false);\n\n\t\t\t// force the ui to update so that we have the approprate fields to fill in\n\t\t\tMeteor.flush();\n\n\t\t\tif (document.getElementById('login-username'))\n\t\t\t\tdocument.getElementById('login-username').value = username;\n\t\t\tif (document.getElementById('login-email'))\n\t\t\t\tdocument.getElementById('login-email').value = email;\n\t\t\t// \"login-password\" is preserved thanks to the preserve-inputs package\n\t\t\tif (document.getElementById('login-username-or-email'))\n\t\t\t\tdocument.getElementById('login-username-or-email').value = email || username;\n\t\t},\n\t\t'keypress #login-username, keypress #login-email, keypress #login-username-or-email, keypress #login-password, keypress #login-password-again': function(event) {\n\t\t\tif (event.keyCode === 13)\n\t\t\t\tloginOrSignup();\n\t\t}\n\t});\n\n\n\tTemplate._loginButtonsLoggedOutDropdown.helpers({\n\t\t// additional classes that can be helpful in styling the dropdown\n\t\tadditionalClasses: function() {\n\t\t\tif (!Accounts.password) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif (loginButtonsSession.get('inSignupFlow')) {\n\t\t\t\t\treturn 'login-form-create-account';\n\t\t\t\t} else if (loginButtonsSession.get('inForgotPasswordFlow')) {\n\t\t\t\t\treturn 'login-form-forgot-password';\n\t\t\t\t} else {\n\t\t\t\t\treturn 'login-form-sign-in';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdropdownVisible: function() {\n\t\t\treturn loginButtonsSession.get('dropdownVisible');\n\t\t},\n\n\t\thasPasswordService: function() {\n\t\t\treturn Accounts._loginButtons.hasPasswordService();\n\t\t},\n\n\t\tforbidClientAccountCreation: function() {\n\t\t\treturn Accounts._options.forbidClientAccountCreation;\n\t\t}\n\t});\n\n\tTemplate._loginButtonsLoggedOutAllServices.helpers({\n\t\tservices: function() {\n\t\t\treturn Accounts._loginButtons.getLoginServices();\n\t\t},\n\n\t\tisPasswordService: function() {\n\t\t\treturn this.name === 'password';\n\t\t},\n\n\t\thasOtherServices: function() {\n\t\t\treturn Accounts._loginButtons.getLoginServices().length > 1;\n\t\t},\n\n\t\thasPasswordService: function() {\n\t\t\treturn Accounts._loginButtons.hasPasswordService();\n\t\t}\n\t});\n\n\n\tTemplate._loginButtonsLoggedOutPasswordService.helpers({\n\t\tfields: function() {\n\t\t\tvar loginFields = [{\n\t\t\t\tfieldName: 'username-or-email',\n\t\t\t\tfieldLabel: i18n('loginFields.usernameOrEmail'),\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'username',\n\t\t\t\tfieldLabel: i18n('loginFields.username'),\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn Accounts.ui._passwordSignupFields() === \"USERNAME_ONLY\";\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'email',\n\t\t\t\tfieldLabel: i18n('loginFields.email'),\n\t\t\t\tinputType: 'email',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn Accounts.ui._passwordSignupFields() === \"EMAIL_ONLY\";\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password',\n\t\t\t\tfieldLabel: i18n('loginFields.password'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\tvar signupFields = [{\n\t\t\t\tfieldName: 'username',\n\t\t\t\tfieldLabel: i18n('signupFields.username'),\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'email',\n\t\t\t\tfieldLabel: i18n('signupFields.email'),\n\t\t\t\tinputType: 'email',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"EMAIL_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'email',\n\t\t\t\tfieldLabel: i18n('signupFields.emailOpt'),\n\t\t\t\tinputType: 'email',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn Accounts.ui._passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\";\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password',\n\t\t\t\tfieldLabel: i18n('signupFields.password'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password-again',\n\t\t\t\tfieldLabel: i18n('signupFields.passwordAgain'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\t// No need to make users double-enter their password if\n\t\t\t\t\t// they'll necessarily have an email set, since they can use\n\t\t\t\t\t// the \"forgot password\" flow.\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\tsignupFields = Accounts.ui._options.extraSignupFields.concat(signupFields);\n\n\t\t\treturn loginButtonsSession.get('inSignupFlow') ? signupFields : loginFields;\n\t\t},\n\n\t\tinForgotPasswordFlow: function() {\n\t\t\treturn loginButtonsSession.get('inForgotPasswordFlow');\n\t\t},\n\n\t\tinLoginFlow: function() {\n\t\t\treturn !loginButtonsSession.get('inSignupFlow') && !loginButtonsSession.get('inForgotPasswordFlow');\n\t\t},\n\n\t\tinSignupFlow: function() {\n\t\t\treturn loginButtonsSession.get('inSignupFlow');\n\t\t},\n\n\t\tshowForgotPasswordLink: function() {\n\t\t\treturn _.contains(\n\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"EMAIL_ONLY\"],\n\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t},\n\n\t\tshowCreateAccountLink: function() {\n\t\t\treturn !Accounts._options.forbidClientAccountCreation;\n\t\t}\n\t});\n\n\tTemplate._loginButtonsFormField.helpers({\n\t\tinputType: function() {\n\t\t\treturn this.inputType || \"text\";\n\t\t}\n\t});\n\n\t//\n\t// loginButtonsChangePassword template\n\t//\n\tTemplate._loginButtonsChangePassword.events({\n\t\t'keypress #login-old-password, keypress #login-password, keypress #login-password-again': function(event) {\n\t\t\tif (event.keyCode === 13)\n\t\t\t\tchangePassword();\n\t\t},\n\t\t'click #login-buttons-do-change-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tchangePassword();\n\t\t},\n\t\t'click #login-buttons-cancel-change-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\t\t\tAccounts._loginButtonsSession.set('inChangePasswordFlow', false);\n\t\t\tMeteor.flush();\n\t\t}\n\t});\n\n\tTemplate._loginButtonsChangePassword.helpers({\n\t\tfields: function() {\n\t\t\treturn [{\n\t\t\t\tfieldName: 'old-password',\n\t\t\t\tfieldLabel: i18n('changePasswordFields.currentPassword'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password',\n\t\t\t\tfieldLabel: i18n('changePasswordFields.newPassword'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password-again',\n\t\t\t\tfieldLabel: i18n('changePasswordFields.newPasswordAgain'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\t// No need to make users double-enter their password if\n\t\t\t\t\t// they'll necessarily have an email set, since they can use\n\t\t\t\t\t// the \"forgot password\" flow.\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}];\n\t\t}\n\t});\n\n\t//\n\t// helpers\n\t//\n\n\tvar elementValueById = function(id) {\n\t\tvar element = document.getElementById(id);\n\t\tif (!element)\n\t\t\treturn null;\n\t\telse\n\t\t\treturn element.value;\n\t};\n\n\tvar trimmedElementValueById = function(id) {\n\t\tvar element = document.getElementById(id);\n\t\tif (!element)\n\t\t\treturn null;\n\t\telse\n\t\t\treturn element.value.replace(/^\\s*|\\s*$/g, \"\"); // trim;\n\t};\n\n\tvar loginOrSignup = function() {\n\t\tif (loginButtonsSession.get('inSignupFlow'))\n\t\t\tsignup();\n\t\telse\n\t\t\tlogin();\n\t};\n\n\tvar login = function() {\n\t\tloginButtonsSession.resetMessages();\n\n\t\tvar username = trimmedElementValueById('login-username');\n\t\tvar email = trimmedElementValueById('login-email');\n\t\tvar usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar password = elementValueById('login-password');\n\n\t\tvar loginSelector;\n\t\tif (username !== null) {\n\t\t\tif (!Accounts._loginButtons.validateUsername(username))\n\t\t\t\treturn;\n\t\t\telse\n\t\t\t\tloginSelector = {\n\t\t\t\t\tusername: username\n\t\t\t\t};\n\t\t} else if (email !== null) {\n\t\t\tif (!Accounts._loginButtons.validateEmail(email))\n\t\t\t\treturn;\n\t\t\telse\n\t\t\t\tloginSelector = {\n\t\t\t\t\temail: email\n\t\t\t\t};\n\t\t} else if (usernameOrEmail !== null) {\n\t\t\t// XXX not sure how we should validate this. but this seems good enough (for now),\n\t\t\t// since an email must have at least 3 characters anyways\n\t\t\tif (!Accounts._loginButtons.validateUsername(usernameOrEmail))\n\t\t\t\treturn;\n\t\t\telse\n\t\t\t\tloginSelector = usernameOrEmail;\n\t\t} else {\n\t\t\tthrow new Error(\"Unexpected -- no element to use as a login user selector\");\n\t\t}\n\n\t\tMeteor.loginWithPassword(loginSelector, password, function(error, result) {\n\t\t\tif (error) {\n\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t} else {\n\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t}\n\t\t});\n\t};\n\n\tvar toggleDropdown = function() {\n\t\t// $('#login-dropdown-list .dropdown-menu').dropdown('toggle');\n\t\t$(\"#login-dropdown-list\").toggleClass(\"open\");\n\n\t};\n\n\tvar signup = function() {\n\t\tloginButtonsSession.resetMessages();\n\n\t\tvar options = {}; // to be passed to Accounts.createUser\n\n\t\tvar username = trimmedElementValueById('login-username');\n\t\tif (username !== null) {\n\t\t\tif (!Accounts._loginButtons.validateUsername(username))\n\t\t\t\treturn;\n\t\t\telse\n\t\t\t\toptions.username = username;\n\t\t}\n\n\t\tvar email = trimmedElementValueById('login-email');\n\t\tif (email !== null) {\n\t\t\tif (!Accounts._loginButtons.validateEmail(email))\n\t\t\t\treturn;\n\t\t\telse\n\t\t\t\toptions.email = email;\n\t\t}\n\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar password = elementValueById('login-password');\n\t\tif (!Accounts._loginButtons.validatePassword(password))\n\t\t\treturn;\n\t\telse\n\t\t\toptions.password = password;\n\n\t\tif (!matchPasswordAgainIfPresent())\n\t\t\treturn;\n\n\t\t// prepare the profile object\n\t\toptions.profile = {};\n\n\t\t// define a proxy function to allow extraSignupFields set error messages\n\t\tvar errorFn = function(errorMessage) {\n\t\t\tAccounts._loginButtonsSession.errorMessage(errorMessage);\n\t\t};\n\n\t\tvar invalidExtraSignupFields = false;\n\n\t\t// parse extraSignupFields to populate account's profile data\n\t\t_.each(Accounts.ui._options.extraSignupFields, function(field, index) {\n\t\t\tvar value = elementValueById('login-' + field.fieldName);\n\t\t\tif (typeof field.validate === 'function') {\n\t\t\t\tif (field.validate(value, errorFn)) {\n\t\t\t\t\toptions.profile[field.fieldName] = elementValueById('login-' + field.fieldName);\n\t\t\t\t} else {\n\t\t\t\t\tinvalidExtraSignupFields = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toptions.profile[field.fieldName] = elementValueById('login-' + field.fieldName);\n\t\t\t}\n\t\t});\n\n\t\tif (invalidExtraSignupFields)\n\t\t\treturn;\n\n\t\tAccounts.createUser(options, function(error) {\n\t\t\tif (error) {\n\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t} else {\n\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t}\n\t\t});\n\t};\n\n\tvar forgotPassword = function() {\n\t\tloginButtonsSession.resetMessages();\n\n\t\tvar email = trimmedElementValueById(\"forgot-password-email\");\n\t\tif (email.indexOf('@') !== -1) {\n\t\t\tAccounts.forgotPassword({\n\t\t\t\temail: email\n\t\t\t}, function(error) {\n\t\t\t\tif (error)\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\telse\n\t\t\t\t\tloginButtonsSession.infoMessage(i18n('forgotPasswordForm.sent'));\n\t\t\t});\n\t\t} else {\n\t\t\tloginButtonsSession.infoMessage(i18n('forgotPasswordForm.sent'));\n\t\t}\n\t};\n\n\tvar changePassword = function() {\n\t\tloginButtonsSession.resetMessages();\n\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar oldPassword = elementValueById('login-old-password');\n\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar password = elementValueById('login-password');\n\t\tif (!Accounts._loginButtons.validatePassword(password))\n\t\t\treturn;\n\n\t\tif (!matchPasswordAgainIfPresent())\n\t\t\treturn;\n\n\t\tAccounts.changePassword(oldPassword, password, function(error) {\n\t\t\tif (error) {\n\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t} else {\n\t\t\t\tloginButtonsSession.infoMessage(\"Password changed\");\n\n\t\t\t\t// wait 3 seconds, then expire the msg\n\t\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t\tloginButtonsSession.resetMessages();\n\t\t\t\t}, 3000);\n\t\t\t}\n\t\t});\n\t};\n\n\tvar matchPasswordAgainIfPresent = function() {\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar passwordAgain = elementValueById('login-password-again');\n\t\tif (passwordAgain !== null) {\n\t\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\t\tvar password = elementValueById('login-password');\n\t\t\tif (password !== passwordAgain) {\n\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.passwordsDontMatch'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n})();","(function() {\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\n\t//\n\t// populate the session so that the appropriate dialogs are\n\t// displayed by reading variables set by accounts-urls, which parses\n\t// special URLs. since accounts-ui depends on accounts-urls, we are\n\t// guaranteed to have these set at this point.\n\t//\n\n\tif (Accounts._resetPasswordToken) {\n\t\tloginButtonsSession.set('resetPasswordToken', Accounts._resetPasswordToken);\n\t}\n\n\tif (Accounts._enrollAccountToken) {\n\t\tloginButtonsSession.set('enrollAccountToken', Accounts._enrollAccountToken);\n\t}\n\n\t// Needs to be in Meteor.startup because of a package loading order\n\t// issue. We can't be sure that accounts-password is loaded earlier\n\t// than accounts-ui so Accounts.verifyEmail might not be defined.\n\tMeteor.startup(function() {\n\t\tif (Accounts._verifyEmailToken) {\n\t\t\tAccounts.verifyEmail(Accounts._verifyEmailToken, function(error) {\n\t\t\t\tAccounts._enableAutoLogin();\n\t\t\t\tif (!error)\n\t\t\t\t\tloginButtonsSession.set('justVerifiedEmail', true);\n\t\t\t\t// XXX show something if there was an error.\n\t\t\t});\n\t\t}\n\t});\n\n\t//\n\t// resetPasswordDialog template\n\t//\n\n\tTemplate._resetPasswordDialog.events({\n\t\t'click #login-buttons-reset-password-button': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tresetPassword();\n\t\t},\n\t\t'keypress #reset-password-new-password': function(event) {\n\t\t\tif (event.keyCode === 13)\n\t\t\t\tresetPassword();\n\t\t},\n\t\t'click #login-buttons-cancel-reset-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.set('resetPasswordToken', null);\n\t\t\tAccounts._enableAutoLogin();\n\t\t\t$('#login-buttons-reset-password-modal').modal(\"hide\");\n\t\t}\n\t});\n\n\tvar resetPassword = function() {\n\t\tloginButtonsSession.resetMessages();\n\t\tvar newPassword = document.getElementById('reset-password-new-password').value;\n\t\tif (!Accounts._loginButtons.validatePassword(newPassword))\n\t\t\treturn;\n\n\t\tAccounts.resetPassword(\n\t\t\tloginButtonsSession.get('resetPasswordToken'), newPassword,\n\t\t\tfunction(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.set('resetPasswordToken', null);\n\t\t\t\t\tAccounts._enableAutoLogin();\n\t\t\t\t\t$('#login-buttons-reset-password-modal').modal(\"hide\");\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tTemplate._resetPasswordDialog.helpers({\n\t\tinResetPasswordFlow: function() {\n\t\t\treturn loginButtonsSession.get('resetPasswordToken');\n\t\t}\n\t});\n\n\tTemplate._resetPasswordDialog.rendered = function() {\n\t\tvar $modal = $(this.find('#login-buttons-reset-password-modal'));\n\t\t$modal.modal();\n\t};\n\n\t//\n\t// enrollAccountDialog template\n\t//\n\n\tTemplate._enrollAccountDialog.events({\n\t\t'click #login-buttons-enroll-account-button': function() {\n\t\t\tenrollAccount();\n\t\t},\n\t\t'keypress #enroll-account-password': function(event) {\n\t\t\tif (event.keyCode === 13)\n\t\t\t\tenrollAccount();\n\t\t},\n\t\t'click #login-buttons-cancel-enroll-account-button': function() {\n\t\t\tloginButtonsSession.set('enrollAccountToken', null);\n\t\t\tAccounts._enableAutoLogin();\n\t\t\t$modal.modal(\"hide\");\n\t\t}\n\t});\n\n\tvar enrollAccount = function() {\n\t\tloginButtonsSession.resetMessages();\n\t\tvar password = document.getElementById('enroll-account-password').value;\n\t\tif (!Accounts._loginButtons.validatePassword(password))\n\t\t\treturn;\n\n\t\tAccounts.resetPassword(\n\t\t\tloginButtonsSession.get('enrollAccountToken'), password,\n\t\t\tfunction(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.set('enrollAccountToken', null);\n\t\t\t\t\tAccounts._enableAutoLogin();\n\t\t\t\t\t$modal.modal(\"hide\");\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tTemplate._enrollAccountDialog.helpers({\n\t\tinEnrollAccountFlow: function() {\n\t\t\treturn loginButtonsSession.get('enrollAccountToken');\n\t\t}\n\t});\n\n\tTemplate._enrollAccountDialog.rendered = function() {\n\t\t$modal = $(this.find('#login-buttons-enroll-account-modal'));\n\t\t$modal.modal();\n\t};\n\n\t//\n\t// justVerifiedEmailDialog template\n\t//\n\n\tTemplate._justVerifiedEmailDialog.events({\n\t\t'click #just-verified-dismiss-button': function() {\n\t\t\tloginButtonsSession.set('justVerifiedEmail', false);\n\t\t}\n\t});\n\n\tTemplate._justVerifiedEmailDialog.helpers({\n\t\tvisible: function() {\n\t\t\tif (loginButtonsSession.get('justVerifiedEmail')) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$('#login-buttons-email-address-verified-modal').modal()\n\t\t\t\t}, 500)\n\t\t\t}\n\t\t\treturn loginButtonsSession.get('justVerifiedEmail');\n\t\t}\n\t});\n\n\n\t//\n\t// loginButtonsMessagesDialog template\n\t//\n\n\t// Template._loginButtonsMessagesDialog.rendered = function() {\n\t//   var $modal = $(this.find('#configure-login-service-dialog-modal'));\n\t//   $modal.modal();\n\t// }\n\n\tTemplate._loginButtonsMessagesDialog.events({\n\t\t'click #messages-dialog-dismiss-button': function() {\n\t\t\tloginButtonsSession.resetMessages();\n\t\t}\n\t});\n\n\tTemplate._loginButtonsMessagesDialog.helpers({\n\t\tvisible: function() {\n\t\t\tvar hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');\n\t\t\treturn !Accounts._loginButtons.dropdown() && hasMessage;\n\t\t}\n\t});\n\n\n\t//\n\t// configureLoginServiceDialog template\n\t//\n\n\tTemplate._configureLoginServiceDialog.events({\n\t\t'click .configure-login-service-dismiss-button': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.set('configureLoginServiceDialogVisible', false);\n\t\t\t$('#configure-login-service-dialog-modal').modal('hide');\n\t\t},\n\t\t'click #configure-login-service-dialog-save-configuration': function() {\n\t\t\tif (loginButtonsSession.get('configureLoginServiceDialogVisible') &&\n\t\t\t\t!loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {\n\t\t\t\t// Prepare the configuration document for this login service\n\t\t\t\tvar serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n\t\t\t\tvar configuration = {\n\t\t\t\t\tservice: serviceName\n\t\t\t\t};\n\t\t\t\t_.each(configurationFields(), function(field) {\n\t\t\t\t\tconfiguration[field.property] = document.getElementById(\n\t\t\t\t\t\t'configure-login-service-dialog-' + field.property).value\n\t\t\t\t\t\t.replace(/^\\s*|\\s*$/g, \"\"); // trim;\n\t\t\t\t});\n\n\t\t\t\t// Configure this login service\n\t\t\t\tMeteor.call(\"configureLoginService\", configuration, function(error, result) {\n\t\t\t\t\tif (error)\n\t\t\t\t\t\tMeteor._debug(\"Error configuring login service \" + serviceName, error);\n\t\t\t\t\telse\n\t\t\t\t\t\tloginButtonsSession.set('configureLoginServiceDialogVisible', false);\n\t\t\t\t\t$('#configure-login-service-dialog-modal').modal('hide');\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t// IE8 doesn't support the 'input' event, so we'll run this on the keyup as\n\t\t// well. (Keeping the 'input' event means that this also fires when you use\n\t\t// the mouse to change the contents of the field, eg 'Cut' menu item.)\n\t\t'input, keyup input': function(event) {\n\t\t\t// if the event fired on one of the configuration input fields,\n\t\t\t// check whether we should enable the 'save configuration' button\n\t\t\tif (event.target.id.indexOf('configure-login-service-dialog') === 0)\n\t\t\t\tupdateSaveDisabled();\n\t\t}\n\t});\n\n\t// check whether the 'save configuration' button should be enabled.\n\t// this is a really strange way to implement this and a Forms\n\t// Abstraction would make all of this reactive, and simpler.\n\tvar updateSaveDisabled = function() {\n\t\tvar anyFieldEmpty = _.any(configurationFields(), function(field) {\n\t\t\treturn document.getElementById(\n\t\t\t\t'configure-login-service-dialog-' + field.property).value === '';\n\t\t});\n\n\t\tloginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);\n\t};\n\n\t// Returns the appropriate template for this login service.  This\n\t// template should be defined in the service's package\n\tvar configureLoginServiceDialogTemplateForService = function() {\n\t\tvar serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n\t\treturn Template['configureLoginServiceDialogFor' + capitalize(serviceName)];\n\t};\n\n\tvar configurationFields = function() {\n\t\tvar template = configureLoginServiceDialogTemplateForService();\n\t\treturn template.fields();\n\t};\n\n\tTemplate._configureLoginServiceDialog.helpers({\n\t\tconfigurationFields: function() {\n\t\t\treturn configurationFields();\n\t\t},\n\n\t\tvisible: function() {\n\t\t\treturn loginButtonsSession.get('configureLoginServiceDialogVisible');\n\t\t},\n\n\t\tconfigurationSteps: function() {\n\t\t\t// renders the appropriate template\n\t\t\treturn configureLoginServiceDialogTemplateForService();\n\t\t},\n\n\t\tsaveDisabled: function() {\n\t\t\treturn loginButtonsSession.get('configureLoginServiceDialogSaveDisabled');\n\t\t}\n\t});\n\n\n\t;\n\n\n\n\t// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\n\tvar capitalize = function(str) {\n\t\tstr = str == null ? '' : String(str);\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t};\n\n})();"]}