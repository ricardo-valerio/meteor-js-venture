)]}'
{"version":3,"file":"/packages/gwendall:session-json.js","sources":["gwendall:session-json/export.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uC;AACA,C;AACA,yF;AACA,Q;AACA,S;AACA,mB;;AAEA,kB;AACA,4B;;AAEA,a;AACA,M;;AAEA,iB;AACA,mB;AACA,yD;AACA,G;;AAEA,uB;;AAEA,e;;AAEA,kB;AACA,S;AACA,qD;AACA,+B;AACA,E;;AAEA,c;;AAEA,C;;AAEA,mC;AACA,C;AACA,8B;AACA,E;AACA,kB;AACA,kC;;AAEA,6B;;AAEA,6B;;AAEA,U;;AAEA,yB;AACA,8B;;AAEA,oB;;AAEA,qC;;AAEA,Q;AACA,0C;AACA,e;AACA,qB;AACA,I;;AAEA,gB;;AAEA,G;AACA,E;AACA,E;;AAEA,G;;AAEA,mC;AACA,C;AACA,qC;AACA,E;AACA,kB;AACA,kC;AACA,qB;;AAEA,6B;AACA,G;AACA,6B;;AAEA,U;;AAEA,qC;;AAEA,oB;AACA,mB;AACA,6B;AACA,K;AACA,G;AACA,oB;AACA,qC;AACA,G;AACA,4C;AACA,wB;AACA,G;AACA,G;AACA,E;AACA,E;;AAEA,G","sourcesContent":["var deep = function (obj, key, value) {\n\t\n\tvar keys = key.replace(/\\[([\"']?)([^\\1]+?)\\1?\\]/g, '.$2').replace(/^\\./, '').split('.'),\n\t\t\troot,\n\t\t\ti = 0,\n\t\t\tn = keys.length;\n\n\t// Set deep value\n\tif (arguments.length > 2) {\n\n\t\troot = obj;\n\t\tn--;\n\n\t\twhile (i < n) {\n\t\t\tkey = keys[i++];\n\t\t\tobj = obj[key] = _.isObject(obj[key]) ? obj[key] : {};\n\t\t}\n\n\t\tobj[keys[i]] = value;\n\n\t\tvalue = root;\n\n\t// Get deep value\n\t} else {\n\t\twhile ((obj = obj[keys[i++]]) != null && i < n) {};\n\t\tvalue = i < n ? void 0 : obj;\n\t}\n\n\treturn value;\n\n}\n\n_.extend(ReactiveDict.prototype, { \n\t\n\tgetJSON: function(selector) {\n\t\t\n\t\tvar self = this,\n\t\t\tpathKeys = selector.split('.');\n\n\t\tif (pathKeys.length == 1) {\n\n\t\t\treturn self.get(selector);\n\n\t\t} else {\n\n\t\t\tvar key = pathKeys[0],\n\t\t\t\tjsonValue = self.get(key);\n\n\t\t\tpathKeys.shift();\n\n\t\t\tvar jsonPath = pathKeys.join('.');\n\n\t\t\ttry {\n\t\t\t\tvalue = deep(jsonValue, jsonPath);\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\tvalue = null;\t\t\t\t\n\t\t\t}\n\n\t\t\treturn value;\n\n\t\t}\n\t\t\n\t}\n\n});\n\n_.extend(ReactiveDict.prototype, { \n\t\n\tsetJSON: function(selector, value) {\n\t\t\n\t\tvar self = this,\n\t\t\tpathKeys = selector.split('.'),\n\t\t\tkey = pathKeys[0];\n\n\t\tif (pathKeys.length == 1) {\n\t\t\t\n\t\t\tself.set(selector, value);\n\n\t\t} else {\n\n\t\t\tvar jsonValue = self.getJSON(key);\n\n\t\t\tif (!jsonValue) {\n\t\t\t\tjsonValue = {};\n\t\t\t\tself.set(key, jsonValue);\n\t\t\t};\n\t\t\t\n\t\t\tpathKeys.shift();\n\t\t\tvar jsonPath = pathKeys.join('.');\n\t\t\t\n\t\t\tvalue = deep(jsonValue, jsonPath, value);\n\t\t\tself.set(key, value);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n});"]}